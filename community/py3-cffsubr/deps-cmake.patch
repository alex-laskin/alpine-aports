diff --git a/external/afdko/cmake/ExternalAntlr4Cpp.cmake b/external/afdko/cmake/ExternalAntlr4Cpp.cmake
index 5ec7897..2677c23 100644
--- a/external/afdko/cmake/ExternalAntlr4Cpp.cmake
+++ b/external/afdko/cmake/ExternalAntlr4Cpp.cmake
@@ -86,9 +86,11 @@ if(ANTLR4_ZIP_REPOSITORY)
       BUILD_IN_SOURCE 1
       SOURCE_DIR ${ANTLR4_ROOT}/runtime/Cpp  # Edited by iterumllc
       #      SOURCE_SUBDIR runtime/Cpp  # Commented out by iterumllc
+      PATCH_COMMAND patch -p1 < ${CMAKE_CURRENT_SOURCE_DIR}/cmake/antlr4-cmake-policy.patch
       CMAKE_CACHE_ARGS
           -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
           -DWITH_STATIC_CRT:BOOL=${ANTLR4_WITH_STATIC_CRT}
+          -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5
           # -DCMAKE_CXX_STANDARD:STRING=17 # if desired, compile the runtime with a different C++ standard
           # -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD} # alternatively, compile the runtime with the same C++ standard as the outer project
       INSTALL_COMMAND ""
@@ -104,9 +106,11 @@ else()
       BUILD_IN_SOURCE 1
       SOURCE_DIR ${ANTLR4_ROOT}
       SOURCE_SUBDIR runtime/Cpp
+      PATCH_COMMAND cd runtime/Cpp && patch -p1 < ${CMAKE_CURRENT_SOURCE_DIR}/cmake/antlr4-cmake-policy.patch
       CMAKE_CACHE_ARGS
           -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
           -DWITH_STATIC_CRT:BOOL=${ANTLR4_WITH_STATIC_CRT}
+          -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5
           # -DCMAKE_CXX_STANDARD:STRING=17 # if desired, compile the runtime with a different C++ standard
           # -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD} # alternatively, compile the runtime with the same C++ standard as the outer project
       INSTALL_COMMAND ""
diff --git a/external/afdko/cmake/antlr4-cmake-policy.patch b/external/afdko/cmake/antlr4-cmake-policy.patch
new file mode 100644
index 0000000..f391fc0
--- /dev/null
+++ b/external/afdko/cmake/antlr4-cmake-policy.patch
@@ -0,0 +1,38 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index e549f113f..2abb0b3b5 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -28,15 +28,15 @@ project(LIBANTLR4)
+ if(CMAKE_VERSION VERSION_EQUAL "3.0.0" OR
+    CMAKE_VERSION VERSION_GREATER "3.0.0")
+   CMAKE_POLICY(SET CMP0026 NEW)
+-  CMAKE_POLICY(SET CMP0054 OLD)
+-  CMAKE_POLICY(SET CMP0045 OLD)
+-  CMAKE_POLICY(SET CMP0042 OLD)
++  CMAKE_POLICY(SET CMP0054 NEW)
++  CMAKE_POLICY(SET CMP0045 NEW)
++  CMAKE_POLICY(SET CMP0042 NEW)
+ endif()
+ 
+ if(CMAKE_VERSION VERSION_EQUAL "3.3.0" OR
+    CMAKE_VERSION VERSION_GREATER "3.3.0")
+-  CMAKE_POLICY(SET CMP0059 OLD)
+-  CMAKE_POLICY(SET CMP0054 OLD)
++  CMAKE_POLICY(SET CMP0059 NEW)
++  CMAKE_POLICY(SET CMP0054 NEW)
+ endif()
+ 
+ if(CMAKE_SYSTEM_NAME MATCHES "Linux")
+diff --git a/runtime/CMakeLists.txt b/runtime/CMakeLists.txt
+index c8b16c6cf..03806e1af 100644
+--- a/runtime/CMakeLists.txt
++++ b/runtime/CMakeLists.txt
+@@ -61,7 +61,7 @@ else()
+       GIT_TAG               "v3.1.1"
+       SOURCE_DIR            ${UTFCPP_DIR}
+       UPDATE_DISCONNECTED   1
+-      CMAKE_ARGS            -DCMAKE_INSTALL_PREFIX=${UTFCPP_DIR}/install -DUTF8_TESTS=off -DUTF8_SAMPLES=off
++      CMAKE_ARGS            -DCMAKE_INSTALL_PREFIX=${UTFCPP_DIR}/install -DUTF8_TESTS=off -DUTF8_SAMPLES=off -DCMAKE_POLICY_VERSION_MINIMUM=3.5
+       STEP_TARGETS          build)
+ 
+     include_directories(
diff --git a/external/afdko/setup.py b/external/afdko/setup.py
index 79712cc..8a48494 100644
--- a/external/afdko/setup.py
+++ b/external/afdko/setup.py
@@ -195,13 +195,7 @@ def main():
           },
           zip_safe=False,
           python_requires='>=3.8',
-          setup_requires=[
-              'wheel',
-              'setuptools_scm',
-              'scikit-build',
-              'cmake',
-              'ninja'
-          ],
+          cmake_args=['-DCMAKE_POLICY_VERSION_MINIMUM=3.5'],
           tests_require=[
               'pytest',
           ],
