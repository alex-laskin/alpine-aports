diff --git a/common/hmap.c b/common/hmap.c
index 9c5d657..8b77205 100644
--- a/common/hmap.c
+++ b/common/hmap.c
@@ -363,7 +363,7 @@ hmap_iterator(HMap *map, HMapIterator *it)
  * function. But no other entry.
  */
 void
-hmap_foreach_value(HMap *map, void (*iterator)())
+hmap_foreach_value(HMap *map, void (*iterator)(void *))
 {
     uint32_t c;
 
@@ -378,7 +378,7 @@ hmap_foreach_value(HMap *map, void (*iterator)())
 }
 
 void
-hmap_foreach_key(HMap *map, void (*iterator)())
+hmap_foreach_key(HMap *map, void (*iterator)(void *))
 {
     uint32_t c;
 
diff --git a/common/hmap.h b/common/hmap.h
index bf6684b..a124b53 100644
--- a/common/hmap.h
+++ b/common/hmap.h
@@ -50,8 +50,8 @@ void *hmap_put(HMap *map, void *key, void *value);
 bool hmap_contains_key(HMap *map, const void *key);
 void *hmap_remove(HMap *map, const void *key);
 void hmap_iterator(HMap *map, HMapIterator *it);
-void hmap_foreach_key(HMap *map, void (*iterator)());
-void hmap_foreach_value(HMap *map, void (*iterator)());
+void hmap_foreach_key(HMap *map, void (*iterator)(void *));
+void hmap_foreach_value(HMap *map, void (*iterator)(void *));
 void hmap_clear(HMap *map);
 size_t hmap_size(HMap *map);
 void hmap_set_hash_fn(HMap *map, hash_fn_t hash);
diff --git a/common/llist.c b/common/llist.c
index 873f36c..d65438d 100644
--- a/common/llist.c
+++ b/common/llist.c
@@ -445,7 +445,7 @@ llist_is_empty(LList *list)
 }
 
 void
-llist_iterate(LList *list, void (*iterator_func)())
+llist_iterate(LList *list, void (*iterator_func)(void *))
 {
 	LNode *entry;
 	for (entry = list->first; entry != NULL; entry = entry->next)
diff --git a/common/llist.h b/common/llist.h
index 11d13a3..a2bf77b 100644
--- a/common/llist.h
+++ b/common/llist.h
@@ -68,7 +68,7 @@ LList *llist_clone(LList *list);
 void **llist_to_array(LList *list);
 void **llist_to_null_terminated_array(LList *list);
 
-void llist_iterate(LList *list, void (*iterator_func)());
+void llist_iterate(LList *list, void (*iterator_func)(void *));
 void llist_iterator(LList *list, LListIterator *it);
 
 void llist_reverse(LList *list);
diff --git a/common/tmap.c b/common/tmap.c
index bdbd0e3..1512c7c 100644
--- a/common/tmap.c
+++ b/common/tmap.c
@@ -512,7 +512,7 @@ predecessor(TMapNode *node)
 #endif
 
 static void
-tmap_foreach_nodes_key(TMapNode *node, void (*iterator)())
+tmap_foreach_nodes_key(TMapNode *node, void (*iterator)(void *))
 {
     if (node->left != &nil)
     	tmap_foreach_nodes_key(node->left, iterator);
@@ -522,7 +522,7 @@ tmap_foreach_nodes_key(TMapNode *node, void (*iterator)())
 }
 
 static void
-tmap_foreach_nodes_value(TMapNode *node, void (*iterator)())
+tmap_foreach_nodes_value(TMapNode *node, void (*iterator)(void *))
 {
     if (node->left != &nil)
     	tmap_foreach_nodes_value(node->left, iterator);
@@ -532,14 +532,14 @@ tmap_foreach_nodes_value(TMapNode *node, void (*iterator)())
 }
 
 void
-tmap_foreach_key(TMap *map, void (*iterator)())
+tmap_foreach_key(TMap *map, void (*iterator)(void *))
 {
     if (map->root != &nil)
 	tmap_foreach_nodes_key(map->root, iterator);
 }
 
 void
-tmap_foreach_value(TMap *map, void (*iterator)())
+tmap_foreach_value(TMap *map, void (*iterator)(void *))
 {
     if (map->root != &nil)
 	tmap_foreach_nodes_value(map->root, iterator);
diff --git a/common/tmap.h b/common/tmap.h
index b1368f8..e3e422d 100644
--- a/common/tmap.h
+++ b/common/tmap.h
@@ -51,8 +51,8 @@ void *tmap_remove(TMap *map, const void *key);
 void tmap_iterator(TMap *map, TMapIterator *it); /* value iterator */
 bool tmap_iterator_partial(TMap *map, TMapIterator *it, const void *match, comparison_fn_t comparator);
 void tmap_clear(TMap *map);
-void tmap_foreach_key(TMap *map, void (*iterator)());
-void tmap_foreach_value(TMap *map, void (*iterator)());
+void tmap_foreach_key(TMap *map, void (*iterator)(void *));
+void tmap_foreach_value(TMap *map, void (*iterator)(void *));
 
 #ifdef ENABLE_TMAP_TESTING
 #include <stdio.h>
