diff --git a/utils/v4l2-tracer/retrace.cpp b/utils/v4l2-tracer/retrace.cpp
index 010936c0..e69ad27b 100644
--- a/utils/v4l2-tracer/retrace.cpp
+++ b/utils/v4l2-tracer/retrace.cpp
@@ -46,15 +46,19 @@ void retrace_mmap(json_object *mmap_obj, bool is_mmap64)
 		return;
 
 	void *buf_address_retrace_pointer = nullptr;
+#if defined(linux) && defined(__GLIBC__)
 	if (is_mmap64)
 		buf_address_retrace_pointer = mmap64(0, len, prot, flags, fd_retrace, off);
 	else
+#endif
 		buf_address_retrace_pointer = mmap(0, len, prot, flags, fd_retrace, off);
 
 	if (buf_address_retrace_pointer == MAP_FAILED) {
+#if defined(linux) && defined(__GLIBC__)
 		if (is_mmap64)
 			perror("mmap64");
 		else
+#endif
 			perror("mmap");
 		debug_line_info();
 		print_context();
@@ -116,9 +120,11 @@ void retrace_open(json_object *jobj, bool is_open64)
 	int fd_trace = json_object_get_int(fd_trace_obj);
 
 	json_object *open_args_obj;
+#if defined(linux) && defined(__GLIBC__)
 	if (is_open64)
 		json_object_object_get_ex(jobj, "open64", &open_args_obj);
 	else
+#endif
 		json_object_object_get_ex(jobj, "open", &open_args_obj);
 
 	json_object *path_obj;
@@ -148,9 +154,11 @@ void retrace_open(json_object *jobj, bool is_open64)
 		mode = s2number(json_object_get_string(mode_obj));
 
 	int fd_retrace = 0;
+#if defined(linux) && defined(__GLIBC__)
 	if (is_open64)
 		fd_retrace = open64(path_retrace.c_str(), oflag, mode);
 	else
+#endif
 		fd_retrace = open(path_retrace.c_str(), oflag, mode);
 
 	if (fd_retrace <= 0) {
@@ -162,9 +170,11 @@ void retrace_open(json_object *jobj, bool is_open64)
 
 	if (is_verbose() || errno != 0) {
 		fprintf(stderr, "path: %s ", path_retrace.c_str());
+#if defined(linux) && defined(__GLIBC__)
 		if (is_open64)
 			perror("open64");
 		else
+#endif
 			perror("open");
 		debug_line_info();
 		print_context();
