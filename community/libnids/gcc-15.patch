diff --git a/src/ip_fragment.c b/src/ip_fragment.c
index 4864071..5f6d071 100644
--- a/src/ip_fragment.c
+++ b/src/ip_fragment.c
@@ -43,7 +43,7 @@ struct timer_list {
   struct timer_list *prev;
   struct timer_list *next;
   int expires;
-  void (*function)();
+  void (*function)(unsigned long);
   unsigned long data;
   // struct ipq *frags;
 };
diff --git a/src/libnids.c b/src/libnids.c
index af56808..73026c4 100644
--- a/src/libnids.c
+++ b/src/libnids.c
@@ -197,7 +197,7 @@ static void call_ip_frag_procs(void *data,bpf_u_int32 caplen)
 {
     struct proc_node *i;
     for (i = ip_frag_procs; i; i = i->next)
-	(i->item) (data, caplen);
+	((void (*)(void *, int))(i->item)) (data, caplen);
 }
 
 
@@ -401,7 +401,7 @@ static void gen_ip_frag_proc(u_char * data, int len)
     skblen += nids_params.sk_buff_size;
 
     for (i = ip_procs; i; i = i->next)
-	(i->item) (iph, skblen);
+	((void (*)(struct ip *, int))(i->item)) (iph, skblen);
     if (need_free)
 	free(iph);
 }
@@ -440,8 +440,8 @@ static void process_udp(char *data)
     addr.saddr = iph->ip_src.s_addr;
     addr.daddr = iph->ip_dst.s_addr;
     while (ipp) {
-	ipp->item(&addr, ((char *) udph) + sizeof(struct udphdr),
-		  ulen - sizeof(struct udphdr), data);
+	((void (*)(struct tuple4 *, char *, int, struct ip *))(ipp->item))(&addr, ((char *) udph) + sizeof(struct udphdr),
+		  ulen - sizeof(struct udphdr), (struct ip *)data);
 	ipp = ipp->next;
     }
 }
@@ -465,43 +465,43 @@ static void gen_ip_proc(u_char * data, int skblen)
 static void init_procs()
 {
     ip_frag_procs = mknew(struct proc_node);
-    ip_frag_procs->item = gen_ip_frag_proc;
+    ip_frag_procs->item = (void (*)())gen_ip_frag_proc;
     ip_frag_procs->next = 0;
     ip_procs = mknew(struct proc_node);
-    ip_procs->item = gen_ip_proc;
+    ip_procs->item = (void (*)())gen_ip_proc;
     ip_procs->next = 0;
     tcp_procs = 0;
     udp_procs = 0;
 }
 
-void nids_register_udp(void (*x))
+void nids_register_udp(void (*x)(struct tuple4 *, char *, int, struct ip *))
 {
-    register_callback(&udp_procs, x);
+    register_callback(&udp_procs, (void (*)())x);
 }
 
-void nids_unregister_udp(void (*x))
+void nids_unregister_udp(void (*x)(struct tuple4 *, char *, int, struct ip *))
 {
-    unregister_callback(&udp_procs, x);
+    unregister_callback(&udp_procs, (void (*)())x);
 }
 
-void nids_register_ip(void (*x))
+void nids_register_ip(void (*x)(struct ip *, int))
 {
-    register_callback(&ip_procs, x);
+    register_callback(&ip_procs, (void (*)())x);
 }
 
-void nids_unregister_ip(void (*x))
+void nids_unregister_ip(void (*x)(struct ip *, int))
 {
-    unregister_callback(&ip_procs, x);
+    unregister_callback(&ip_procs, (void (*)())x);
 }
 
-void nids_register_ip_frag(void (*x))
+void nids_register_ip_frag(void (*x)(void *, int))
 {
-    register_callback(&ip_frag_procs, x);
+    register_callback(&ip_frag_procs, (void (*)())x);
 }
 
-void nids_unregister_ip_frag(void (*x))
+void nids_unregister_ip_frag(void (*x)(void *, int))
 {
-    unregister_callback(&ip_frag_procs, x);
+    unregister_callback(&ip_frag_procs, (void (*)())x);
 }
 
 static int open_live()
diff --git a/src/nids.h b/src/nids.h
index 91c1ff9..2720772 100644
--- a/src/nids.h
+++ b/src/nids.h
@@ -117,13 +117,13 @@ struct nids_prm
   char *filename;
   int sk_buff_size;
   int dev_addon;
-  void (*syslog) ();
+  void (*syslog) (int, int, struct ip *, void *);
   int syslog_level;
   int scan_num_hosts;
   int scan_delay;
   int scan_num_ports;
   void (*no_mem) (char *);
-  int (*ip_filter) ();
+  int (*ip_filter) (struct ip *, int);
   char *pcap_filter;
   int promisc;
   int one_loop_less;
@@ -144,14 +144,14 @@ struct tcp_timeout
 };
 
 int nids_init (void);
-void nids_register_ip_frag (void (*));
-void nids_unregister_ip_frag (void (*));
-void nids_register_ip (void (*));
-void nids_unregister_ip (void (*));
-void nids_register_tcp (void (*));
-void nids_unregister_tcp (void (*x));
-void nids_register_udp (void (*));
-void nids_unregister_udp (void (*));
+void nids_register_ip_frag (void (*)(void *, int));
+void nids_unregister_ip_frag (void (*)(void *, int));
+void nids_register_ip (void (*)(struct ip *, int));
+void nids_unregister_ip (void (*)(struct ip *, int));
+void nids_register_tcp (void (*)(struct tcp_stream *, void **));
+void nids_unregister_tcp (void (*x)(struct tcp_stream *, void **));
+void nids_register_udp (void (*)(struct tuple4 *, char *, int, struct ip *));
+void nids_unregister_udp (void (*)(struct tuple4 *, char *, int, struct ip *));
 void nids_killtcp (struct tcp_stream *);
 void nids_discard (struct tcp_stream *, int);
 int nids_run (void);
diff --git a/src/tcp.c b/src/tcp.c
index 52bb2df..75c99d2 100644
--- a/src/tcp.c
+++ b/src/tcp.c
@@ -856,7 +856,7 @@ process_tcp(u_char * data, int skblen)
 	    char ccu = a_tcp->client.collect_urg;
 	    char scu = a_tcp->server.collect_urg;
 	    
-	    (i->item) (a_tcp, &data);
+	    ((void (*)(struct tcp_stream *, void **))(i->item)) (a_tcp, &data);
 	    if (cc < a_tcp->client.collect)
 	      whatto |= COLLECT_cc;
 	    if (ccu < a_tcp->client.collect_urg)
@@ -877,7 +877,7 @@ process_tcp(u_char * data, int skblen)
 	    }  
 	    if (whatto) {
 	      j = mknew(struct lurker_node);
-	      j->item = i->item;
+	      j->item = (void (*)(struct tcp_stream *, void **))i->item;
 	      j->data = data;
 	      j->whatto = whatto;
 	      j->next = a_tcp->listeners;
@@ -927,15 +927,15 @@ nids_discard(struct tcp_stream * a_tcp, int num)
 }
 
 void
-nids_register_tcp(void (*x))
+nids_register_tcp(void (*x)(struct tcp_stream *, void **))
 {
-  register_callback(&tcp_procs, x);
+  register_callback(&tcp_procs, (void (*)())x);
 }
 
 void
-nids_unregister_tcp(void (*x))
+nids_unregister_tcp(void (*x)(struct tcp_stream *, void **))
 {
-  unregister_callback(&tcp_procs, x);
+  unregister_callback(&tcp_procs, (void (*)())x);
 }
 
 int
diff --git a/src/util.c b/src/util.c
index e871a4b..544b060 100644
--- a/src/util.c
+++ b/src/util.c
@@ -31,7 +31,7 @@ test_malloc(int x)
 }
 
 void
-register_callback(struct proc_node **procs, void (*x))
+register_callback(struct proc_node **procs, void (*x)())
 {
   struct proc_node *ipp;
 
@@ -45,7 +45,7 @@ register_callback(struct proc_node **procs, void (*x))
 }
 
 void
-unregister_callback(struct proc_node **procs, void (*x))
+unregister_callback(struct proc_node **procs, void (*x)())
 {
   struct proc_node *ipp;
   struct proc_node *ipp_prev = 0;
diff --git a/src/util.h b/src/util.h
index d59a8e9..371974a 100644
--- a/src/util.h
+++ b/src/util.h
@@ -6,6 +6,9 @@
 #ifndef _NIDS_UTIL_H
 #define _NIDS_UTIL_H
 
+/* Forward declaration */
+struct tcp_stream;
+
 #define mknew(x)	(x *)test_malloc(sizeof(x))
 #define b_comp(x,y)	(!memcmp(&(x), &(y), sizeof(x)))
 
@@ -15,7 +18,7 @@ struct proc_node {
 };
 
 struct lurker_node {
-  void (*item)();
+  void (*item)(struct tcp_stream *, void **);
   void *data;
   char whatto;
   struct lurker_node *next;
@@ -23,8 +26,8 @@ struct lurker_node {
 
 void nids_no_mem(char *);
 char *test_malloc(int);
-void register_callback(struct proc_node **procs, void (*x));
-void unregister_callback(struct proc_node **procs, void (*x));
+void register_callback(struct proc_node **procs, void (*x)());
+void unregister_callback(struct proc_node **procs, void (*x)());
 
 static inline int
 before(u_int seq1, u_int seq2)
