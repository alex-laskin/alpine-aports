From 67aba04b98e3989ffe8a1708d821880b6a338ad2 Mon Sep 17 00:00:00 2001
From: Quentin Armitage <quentin@armitage.org.uk>
Date: Mon, 25 Aug 2025 18:55:41 +0100
Subject: [PATCH] vrrp: correct report of MASTER/BACKUP on notify fifo when
 reload

Signed-off-by: Quentin Armitage <quentin@armitage.org.uk>
---
 keepalived/include/vrrp.h    |  1 +
 keepalived/vrrp/vrrp.c       |  2 +-
 keepalived/vrrp/vrrp_track.c | 20 +++++++++++++++++++-
 3 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/keepalived/include/vrrp.h b/keepalived/include/vrrp.h
index d96dfa8f..4db121c6 100644
--- a/keepalived/include/vrrp.h
+++ b/keepalived/include/vrrp.h
@@ -528,6 +528,7 @@ extern void vrrp_state_goto_master(vrrp_t *);
 extern void vrrp_state_leave_master(vrrp_t *, bool);
 extern void vrrp_state_leave_fault(vrrp_t *);
 extern bool vrrp_complete_init(void);
+extern vrrp_t *vrrp_exist(vrrp_t *old_vrrp, list_head_t *l) __attribute__ ((pure));
 extern void vrrp_restore_interfaces_startup(void);
 extern void restore_vrrp_interfaces(void);
 extern void shutdown_vrrp_instances(void);
diff --git a/keepalived/vrrp/vrrp.c b/keepalived/vrrp/vrrp.c
index 42da1f48..d88117b4 100644
--- a/keepalived/vrrp/vrrp.c
+++ b/keepalived/vrrp/vrrp.c
@@ -2822,7 +2822,7 @@ open_sockpool_socket(sock_t *sock)
 }
 
 /* Try to find a VRRP instance */
-static vrrp_t * __attribute__ ((pure))
+vrrp_t * __attribute__ ((pure))
 vrrp_exist(vrrp_t *old_vrrp, list_head_t *l)
 {
 	vrrp_t *vrrp;
diff --git a/keepalived/vrrp/vrrp_track.c b/keepalived/vrrp/vrrp_track.c
index 4c3ac1bb..05218e9f 100644
--- a/keepalived/vrrp/vrrp_track.c
+++ b/keepalived/vrrp/vrrp_track.c
@@ -585,6 +585,8 @@ vrrp_set_effective_priority(vrrp_t *vrrp)
 {
 	uint8_t new_prio;
 	uint32_t old_down_timer;
+	vrrp_t *old_vrrp = NULL;
+	int saved_state;
 
 	/* Don't change priority if address owner */
 	if (vrrp->base_priority == VRRP_PRIO_OWNER)
@@ -615,8 +617,24 @@ vrrp_set_effective_priority(vrrp_t *vrrp)
 		vrrp_thread_requeue_read(vrrp);
 	}
 
-	if (vrrp->notify_priority_changes)
+	if (reload &&
+	    (old_vrrp = vrrp_exist(vrrp, &old_vrrp_data->vrrp)) &&
+	    vrrp->effective_priority == old_vrrp->effective_priority) {
+		return;
+	}
+
+	if (old_vrrp && old_vrrp->state == VRRP_STATE_FAULT)
+		old_vrrp = NULL;
+
+	if (vrrp->notify_priority_changes) {
+		if (old_vrrp) {
+			saved_state = vrrp->state;
+			vrrp->state = old_vrrp->state;
+		}
 		send_instance_priority_notifies(vrrp);
+		if (old_vrrp)
+			vrrp->state = saved_state;
+	}
 }
 
 static void
-- 
2.47.3

