# Maintainer: Celeste <cielesti@protonmail.com>
maintainer="Celeste <cielesti@protonmail.com>"
pkgname=openjdk21-loongarch
pkgver=21.0.8_p9
pkgrel=0
_bootver=21.0.8_p9-r0
_majorver=${pkgver%%.*}
_pkgver=${pkgver/_p/+}-ls-ga
pkgdesc="Loongarch port of OpenJDK $_majorver"
url="https://github.com/loongson/jdk${_majorver}u"
arch="loongarch64"
license="GPL-2.0-only WITH Classpath-exception-2.0"
options="sover-namecheck !archcheck" # arch dependent files moved into subpkgs
makedepends_build="
	autoconf
	bash
	gawk
	grep
	make
	zip
	zlib-dev
	"
makedepends_host="
	alsa-lib-dev
	cups-dev
	elfutils-dev
	fontconfig-dev
	freetype-dev
	giflib-dev
	lcms2-dev
	libffi-dev
	libjpeg-turbo-dev
	libpng-dev
	libx11-dev
	libxext-dev
	libxrandr-dev
	libxrender-dev
	libxt-dev
	libxtst-dev
	linux-headers
	zlib-dev
	"
[ "$CBUILD" = "$CTARGET" ] && makedepends="
	$makedepends_build
	$makedepends_host
	java-cacerts
	java-common
	"
subpackages="
	$pkgname-demos::noarch
	$pkgname-doc
	$pkgname-jmods::noarch
	$pkgname-jre
	$pkgname-static-libs:static_libs
	$pkgname-jre-headless:jre_headless
	$pkgname-jdk
	"
_gtest=1.14.0
source="$pkgname-$_pkgver.tar.gz::https://github.com/loongson/jdk${_majorver}u/archive/refs/tags/jdk-$_pkgver.tar.gz
	gtest-$_gtest.tar.gz::https://github.com/google/googletest/archive/v$_gtest.tar.gz
	https://dev.alpinelinux.org/archive/openjdk-loongarch/jdk-$_bootver-miniboot.tgz
	JDK-8218814_Wformat-security.patch
	JDK-8299245_disable-tests.patch
	loongarch-fpu_control.patch
	"
builddir="$srcdir/jdk${_majorver}u-jdk-${_pkgver/+/-}"

case "$CARCH" in
loongarch64)
	_jvm_variants=server
	provides="
		$pkgname-bootstrap=$pkgver-r$pkgrel
		openjdk$_majorver-bootstrap=$pkgver-r$pkgrel
		openjdk$_majorver=$pkgver-r$pkgrel
		"
	replaces="openjdk$_majorver"
	provider_priority=$((_majorver + 1))
	;;
esac

_java_home="usr/lib/jvm/java-$_majorver-openjdk"

ldpath="/$_java_home/lib:/$_java_home/lib/$_jvm_variants"
sonameprefix="$pkgname:"

# enable running the JTReg tests in check?
# see comment in that function for explanation
_run_jtreg=${_run_jtreg:-0}
if [ $_run_jtreg -ne 0 ]; then
	makedepends="$makedepends java-jtreg"
	checkdepends="$checkdepends font-freefont xvfb-run"
fi

prepare() {
	default_prepare

	case "$CARCH" in
	loongarch64)
		;;
	*)
		error "Please use community/openjdk21"
		return 1
		;;
	esac
}

build() {
	if [ $_run_jtreg -ne 0 ]; then
		_with_jtreg="--with-jtreg=/usr/share/java/jtreg"
	else
		_with_jtreg="--with-jtreg=no"
	fi

	if [ -n "$USE_CCACHE" ]; then
		# workaround ccache being disallowed
		export PATH="/usr/bin:/bin:/sbin:/usr/sbin"
		local ccache="--enable-ccache"
	fi

	if [ -z "$JOBS" ]; then
		export JOBS=$(printf '%s\n' "$MAKEFLAGS" | sed -n -e 's/.*-j\([0-9]\+\).*/\1/p')
	fi

	# we want to build hotspot with better optimisations; it's set to this
	# (prepended) anyway, and it's huge
	export CFLAGS="$CFLAGS -O3"
	export CXXFLAGS="$CXXFLAGS -O3"

	# CFLAGS, CXXFLAGS and LDFLAGS are ignored as shown by a warning
	# in the output of ./configure unless used like such:
	#  --with-extra-cflags="$CFLAGS"
	#  --with-extra-cxxflags="$CXXFLAGS"
	#  --with-extra-ldflags="$LDFLAGS"
	# See also paragraph "Configure Control Variables" from "common/doc/building.md"
	# shellcheck disable=2097 disable=2098
	CFLAGS='' CXXFLAGS='' LDFLAGS='' \
		bash ./configure \
		--openjdk-target=$CHOST \
		--prefix="/$_java_home" \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--localstatedir=/var \
		--with-extra-cflags="$CFLAGS" \
		--with-extra-cxxflags="$CXXFLAGS" \
		--with-extra-ldflags="$LDFLAGS" \
		--with-zlib=system \
		--with-libjpeg=system \
		--with-giflib=system \
		--with-libpng=system \
		--with-lcms=system \
		--with-jobs=${JOBS:-4} \
		--with-test-jobs=${JOBS:-4} \
		--with-native-debug-symbols=none \
		--with-boot-jdk="$srcdir/bootjdk" \
		--with-gtest="$srcdir/googletest-$_gtest" \
		$ccache \
		$_with_jtreg \
		--disable-warnings-as-errors \
		--disable-precompiled-headers \
		--enable-dtrace=no \
		--with-jvm-variants=$_jvm_variants \
		--with-debug-level=release \
		--with-version-pre= \
		--with-version-build="${pkgver##*p}" \
		--with-version-opt="${_pkgver#*-}-alpine-r$pkgrel" \
		--with-vendor-name="Alpine" \
		--with-vendor-url="https://alpinelinux.org/" \
		--with-vendor-bug-url="https://gitlab.alpinelinux.org/alpine/aports/issues" \
		--with-vendor-vm-bug-url="https://gitlab.alpinelinux.org/alpine/aports/issues" \
		--with-toolchain-type="$($CC --version | grep -m 1 -o clang || echo gcc)" \
		BUILD_CC="$BUILDCC" BUILD_CXX="$BUILDCXX"

	MAKEFLAGS='' make jdk-image
	MAKEFLAGS='' make static-libs-image
}

check() {
	# run the gtest unittest suites
	# they don't take long, DO NOT DISABLE THEM!
	# override make variable, disable -Werror
	MAKEFLAGS='' make test-hotspot-gtest

	# The jtreg tests take very, very long to finish and show some failures (9 - 12 on my machine, varying between runs)
	# I think these are not critical and can be safely ignored.
	# As the tests take too long, they are disabled by default.
	# When updating this aport please let them run at least once on your machine to see if the failure count changes.
	if [ $_run_jtreg -ne 0 ]; then
		_logfile=$( mktemp -p "$builddir" )
		MAKEFLAGS='' xvfb-run make \
			run-test-tier1 \
			run-test-tier2 \
			run-test-tier3 \
			| tee "$_logfile"
		msg "---------------------------------------"
		msg "The build log can be found at $_logfile"
		# abort the build so you may take a look at the logfile
		false
		return 1
	fi
}

package() {
	depends="$pkgname-jdk=$pkgver-r$pkgrel"

	install -Dvm644 ASSEMBLY_EXCEPTION LICENSE README.md \
		-t "$pkgdir"/$_java_home/

	cd build/linux-*-$_jvm_variants-release/images/
	cp -a jdk/* "$pkgdir"/$_java_home/
	rm -v "$pkgdir"/$_java_home/lib/src.zip

	local libstaticdir="lib/static/linux-loongarch64/musl"
	mkdir -p "$pkgdir"/$_java_home/$libstaticdir
	cp -a static-libs/lib/* "$pkgdir"/$_java_home/$libstaticdir/

	# symlink to shared java cacerts store
	rm -v "$pkgdir"/$_java_home/lib/security/cacerts
	ln -sv /etc/ssl/certs/java/cacerts \
		"$pkgdir"/$_java_home/lib/security/cacerts

	# symlink for java-common to work (expects jre in $_java_home/jre)
	ln -sv . "$pkgdir"/$_java_home/jre
}

jmods() {
	pkgdesc="$pkgdesc (jmods)"
	depends=

	provides="openjdk$_majorver-jmods=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-jmods"

	amove $_java_home/jmods
}

static_libs() {
	pkgdesc="$pkgdesc (libraries for static linking)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"

	provides="java-jdk-static-libs openjdk$_majorver-static-libs=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-static-libs"

	amove $_java_home/lib/static
}

jre() {
	pkgdesc="$pkgdesc (JRE)"
	depends="$pkgname-jre-headless=$pkgver-r$pkgrel"

	provides="java-jre openjdk$_majorver-jre=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-jre"

	amove \
		$_java_home/lib/libawt_xawt.so \
		$_java_home/lib/libfontmanager.so \
		$_java_home/lib/libjavajpeg.so \
		$_java_home/lib/libjawt.so \
		$_java_home/lib/libjsound.so \
		$_java_home/lib/liblcms.so \
		$_java_home/lib/libsplashscreen.so
}

jre_headless() {
	pkgdesc="$pkgdesc (JRE headless)"
	depends="java-common java-cacerts"

	provides="java-jre-headless openjdk$_majorver-jre-headless=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-jre-headless"

	amove \
		$_java_home/bin/java \
		$_java_home/bin/jfr \
		$_java_home/bin/jrunscript \
		$_java_home/bin/jwebserver \
		$_java_home/bin/keytool \
		$_java_home/bin/rmiregistry \
		$_java_home/conf \
		$_java_home/jre \
		$_java_home/release

	# Rest of the lib subdir (which were not taken by -jre subpkg).
	amove $_java_home/lib

	# ct.sym should stay in -jdk
	mkdir -p "$pkgdir"/$_java_home/lib
	mv "$subpkgdir"/$_java_home/lib/ct.sym "$pkgdir"/$_java_home/lib
}

doc() {
	default_doc

	amove $_java_home/man
}

demos() {
	pkgdesc="$pkgdesc (demos)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"

	provides="openjdk$_majorver-demos=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-demos"

	amove $_java_home/demo
}

jdk() {
	pkgdesc="$pkgdesc (JDK) ($_jvm_variants variant)"
	depends="$pkgname-jre=$pkgver-r$pkgrel $pkgname-jmods=$pkgver-r$pkgrel"

	provides="java-jdk openjdk$_majorver-jdk=$pkgver-r$pkgrel"
	replaces="openjdk$_majorver-jdk"

	amove \
		$_java_home/bin \
		$_java_home/lib \
		$_java_home/include
}

create_miniboot() {
	(
		cat <<-'EOF'
			bin/jar
			bin/java
			bin/javac
			bin/javadoc
			conf/security/java.security
			lib/ct.sym
			lib/jspawnhelper
			lib/jvm.cfg
			lib/libawt.so
			lib/libawt_headless.so
			lib/libjava.so
			lib/libjimage.so
			lib/libjli.so
			lib/libnet.so
			lib/libnio.so
			lib/libverify.so
			lib/libzip.so
			lib/modules
			lib/server/libjvm.so
			lib/tzdb.dat
		EOF
	) | tar -C "$builddir"/build/linux-*-$_jvm_variants-release/images/jdk \
		-zcf "jdk-$pkgver-r$pkgrel-miniboot.tgz" \
		--transform 's|^|bootjdk/|' \
		--numeric-owner --owner=0 --group=0 -T -
}

sha512sums="
bcc43b3f8b56a004792b4cec3a9b92bb3a2295e26e0ef784ecc63c3fc0a90cff14b1701d1f8a4cf554b29955cacb83fd5e10774de3ec04e6d76c3d16a146bdad  openjdk21-loongarch-21.0.8+9-ls-ga.tar.gz
765c326ccc1b87a01027385e69238266e356361cd4ee3e18e3c9d137a5d11fa5d657c164d02dd1be8fe693c8e10f2b580588dbfa57d27f070e2750f50d3e662c  gtest-1.14.0.tar.gz
1f2af293ac4a80098ae8407635e0b31cbf1bf63a20e7a128b29cfda95b81dfb84474c8ddcc21dec9025226666164eaca160ed23ccda9a1a61df4098e748c6ddb  jdk-21.0.8_p9-r0-miniboot.tgz
3e51d882085721dd5135d442772ed1e4818346a4fa152608a54f934974a5896bcb9b8c26577e2ab96a351332e56188f62d05e934cb4708a2f14111643b3e86a9  JDK-8218814_Wformat-security.patch
dfca612504e56783b3cc9aa063e03f6120f2db7cd7747ba2fb3555af392a04aaeb895d4123552cdc7829bf2569d185a843c3297a0abb2670105179663b183d4b  JDK-8299245_disable-tests.patch
728070e9676ea947dc6a69281f6d6485597fd2b5efcd267ef09371b580023081884af0ea4e1645a70c734269cd48b94ed2d3674dfb9a2ba1038995e0cdb2f2b9  loongarch-fpu_control.patch
"
