--- a/ckcftp.c
+++ b/ckcftp.c
@@ -930,7 +930,7 @@
 
 #define sig_t my_sig_t
 #define sigtype SIGTYP
-typedef sigtype (*sig_t)();
+typedef sigtype (*sig_t)(int);
 
 /* Static global variables */
 
--- a/ckufio.c
+++ b/ckufio.c
@@ -4667,7 +4667,7 @@
     return("");
 #else
     struct tm * time_stamp;
-    struct tm * localtime();
+    struct tm * localtime(const time_t *);
     int yy, ss;
 
     debug(F101,"zdtstr timearg","",timearg);
@@ -4821,7 +4821,7 @@
     extern int ftime();
 #endif /* M_XENIX */
 #endif /* M_UNIX */
-    extern struct tm * localtime();
+    extern struct tm * localtime(const time_t *);
 
     /* And this should have been declared always through a header file */
 #ifdef HPUX10
@@ -5107,7 +5107,7 @@
     extern int ftime();
 #endif /* M_XENIX */
 #endif /* M_UNIX */
-    extern struct tm * localtime();
+    extern struct tm * localtime(const time_t *);
 
     /* And this should have been declared always through a header file */
 #ifdef HPUX10
@@ -5327,7 +5327,7 @@
 #ifdef BSD44
     extern int utimes();
 #else
-    extern int utime();
+    extern int utime(const char*, const struct utimbuf *);
 #endif /* BSD44 */
 
     struct stat sb;
@@ -6103,9 +6103,9 @@
 
 #ifdef DIRENT                           /* New way, <dirent.h> */
 #define OPENDIR
-    DIR *fd, *opendir();
+    DIR *fd, *opendir(const char*);
     struct dirent *dirbuf;
-    struct dirent *readdir();
+    struct dirent *readdir(DIR*);
 #else /* !DIRENT */
 #ifdef LONGFN                           /* Old way, <dir.h> with opendir() */
 #define OPENDIR
@@ -7020,7 +7020,7 @@
 #ifdef CK_CHILD
         int child;                      /* Child's exit status */
 #endif /* CK_CHILD */
-        SIGTYP (*istat)(), (*qstat)();
+        SIGTYP (*istat)(int), (*qstat)(int);
 
         if (pid == (PID_T) -1) return(-1); /* fork() failed? */
 
@@ -7784,7 +7784,7 @@
 #ifdef CK_SHADOW
     register struct spwd *sp;
 #endif /* CK_SHADOW */
-    char *sgetsave();
+    char *sgetsave(char*);
 
 #ifdef HPUX10_TRUSTED
     struct pr_passwd *pr;
--- a/ckuscr.c
+++ b/ckuscr.c
@@ -533,7 +533,7 @@
     SIGTYP (* volatile savealm)(int);	/* Save incoming alarm function */
 #endif /* NT */
 #else /* OS2 */
-    SIGTYP (*savealm)();		/* Save incoming alarm function */
+    SIGTYP (*savealm)(int);		/* Save incoming alarm function */
 #endif /* OS2 */
     char *e;
 
--- a/ckutio.c
+++ b/ckutio.c
@@ -1229,23 +1229,23 @@
 
 static time_t tcount = (time_t)0;	/* Elapsed time counter */
 
-static SIGTYP (*saval)()     = NULL;	/* For saving alarm() handler */
-static SIGTYP (*savquit)()   = NULL;	/* and other signal handlers */
+static SIGTYP (*saval)(int)     = NULL;	/* For saving alarm() handler */
+static SIGTYP (*savquit)(int)   = NULL;	/* and other signal handlers */
 #ifdef SIGUSR1
-static SIGTYP (*savusr1)()   = NULL;
+static SIGTYP (*savusr1)(int)   = NULL;
 #endif /* SIGUSR1 */
 #ifdef SIGUSR2
-static SIGTYP (*savusr2)()   = NULL;
+static SIGTYP (*savusr2)(int)   = NULL;
 #endif /* SIGUSR2 */
 #ifdef SIGPIPE
-static SIGTYP (*savpipe)()   = NULL;
+static SIGTYP (*savpipe)(int)   = NULL;
 #endif /* SIGPIPE */
 #ifdef SIGDANGER
-static SIGTYP (*savdanger)() = NULL;
+static SIGTYP (*savdanger)(int) = NULL;
 #endif /* SIGDANGER */
 
 #ifndef NOJC
-static SIGTYP (*jchdlr)()    = NULL;	/* For checking suspend handler */
+static SIGTYP (*jchdlr)(int)    = NULL;	/* For checking suspend handler */
 #endif /* NOJC */
 static int jcshell = -1;		/* And flag for result */
 
@@ -1646,7 +1646,7 @@
 /* Control-C trap for communication line input functions */
 
 int cc_int;				/* Flag */
-SIGTYP (* occt)();			/* For saving old SIGINT handler */
+SIGTYP (* occt)(int);			/* For saving old SIGINT handler */
 
 /*ARGSUSED*/
 SIGTYP
@@ -2370,7 +2370,7 @@
 #else
 #ifdef SVORPOSIX
 #ifndef CIE
-    extern char *ctermid();		/* Wish they all had this! */
+    extern char *ctermid(char*);		/* Wish they all had this! */
 #else					/* CIE Regulus */
 #define ctermid(x) strcpy(x,"")
 #endif /* CIE */
@@ -9446,7 +9446,7 @@
 */
     if (x < 0 && !flag && !sigint_ign) { /* Didn't get good results above... */
 
-	SIGTYP (*osigint)();
+	SIGTYP (*osigint)(int);
 
 	osigint = signal(SIGINT,SIG_IGN);	/* What is SIGINT set to? */
 	sigint_ign = 1;
@@ -11896,8 +11896,8 @@
   and extern declarations for them are in ckcdeb.h; thus they are
   declared in this file by inclusion of ckcdeb.h.
 */
-    char *asctime();
-    struct tm *localtime();
+    char *asctime(const struct tm *);
+    struct tm *localtime(const time_t *);
     struct tm *tp;
     ztmsec = -1L;
     ztusec = -1L;
@@ -14535,7 +14537,7 @@
 */
 static int have_pty = 0;		/* Do we have a pty? */
 
-static SIGTYP (*save_sigchld)() = NULL;	/* For catching SIGCHLD */
+static SIGTYP (*save_sigchld)(int) = NULL;	/* For catching SIGCHLD */
 
 static VOID
 sigchld_handler(sig) int sig; {
@@ -15399,7 +15401,7 @@
 	debug(F101,"ttruncmd system",s,x);
 	_exit(x ? BAD_EXIT : 0);
     } else {
-	SIGTYP (*istat)(), (*qstat)();
+	SIGTYP (*istat)(int), (*qstat)(int);
 	if (pid == (PID_T) -1)		/* fork() failed? */
 	  return(0);
 	istat = signal(SIGINT,SIG_IGN); /* Let the fork handle keyboard */
--- a/ckuus3.c
+++ b/ckuus3.c
@@ -4022,7 +4022,7 @@
             }
             goto xdosexp;
         } else if (x == SX_IFC) {               /* Conditional expression */
-            int true = 0;
+            int istrue = 0;
             if (n > 4) {
                 printf("?Too many operands: IF - \"%s\"\n",s);
                 sexprc++;
@@ -4039,9 +4039,9 @@
                 } else {
                     fpj = atof(s2);
                 }
-                true = ((fpj != 0.0) ? 1 : 0);
+                istrue = ((fpj != 0.0) ? 1 : 0);
             }
-            if (!true && n < 4) {
+            if (!istrue && n < 4) {
                 s2 = NULL;
             } else {
                 s2 = dosexp(true ? p[3] : p[4]);
--- a/ckuus4.c
+++ b/ckuus4.c
@@ -2520,7 +2520,7 @@
 #endif /* NT */
 
 #else /* OS2 */
-    SIGTYP (* oldsig)();
+    SIGTYP (* oldsig)(int);
 #endif /* OS2 */
 #endif /* MAC */
     int eof = 0;                        /* End of File flag */
@@ -3207,7 +3207,7 @@
     SIGTYP (* volatile oldsig)(int);    /* For saving old interrupt trap. */
 #endif /* NT */
 #else /* OS2 */
-    SIGTYP (* oldsig)();
+    SIGTYP (* oldsig)(int);
 #endif /* OS2 */
 #endif /* MAC */
 #ifdef CK_ANSIC
@@ -10228,7 +10228,7 @@
 
 #ifndef NODIAL
       case FN_PNCVT: {                  /* Convert phone number */
-          extern char * pncvt();
+          extern char * pncvt(char *);
           failed = 0;
           p = pncvt(bp[0]);
           if (!p) p = "";
@@ -10468,7 +10468,7 @@
           char abuf[16], *s = NULL, **ap = NULL, **vp = NULL;
           char pattern[VNAML];
           int slen, i, j, k, first = -1;
-          extern int xdelmac();
+          extern int xdelmac(int);
           p = fnval;
           if (argn < 2) {
               if (fndiags)
@@ -13910,7 +13910,7 @@
       case VN_DM_HF:
       case VN_DM_WB:
       case VN_DM_RC: {
-          extern char * getdm();
+          extern char * getdm(int);
           ckstrncpy(vvbuf,getdm(y),VVBUFL);
           return((char *)vvbuf);
       }
--- a/ckuus6.c
+++ b/ckuus6.c
@@ -3788,7 +3788,7 @@
     SIGTYP (* volatile oldsig)(int);
 #endif /* NT */
 #else /* OS2 */
-    SIGTYP (* oldsig)();
+    SIGTYP (* oldsig)(int);
 #endif /* OS2 */
 #endif /* MAC */
 
--- a/ckuusr.c
+++ b/ckuusr.c
@@ -8270,7 +8270,7 @@
 	debug(F101,"sexp split","",q->a_size);
 
 	if (q->a_size == 1) {		/* We should get exactly one back */
-	    char * result, * dosexp();
+	    char * result, * dosexp(char*);
 	    sexprc = 0;			/* Reset out-of-band return code */
 	    result = dosexp(s);		/* Get result */
 	    debug(F111,"sexp result",result,sexprc);
--- a/ckuusx.c
+++ b/ckuusx.c
@@ -5879,7 +5879,7 @@
 
 _PROTOTYP(int tgetent,(char *, char *));
 _PROTOTYP(char *tgetstr,(char *, char **));
-_PROTOTYP(int tputs,(char *, int, int (*)()));
+_PROTOTYP(int tputs,(char *, int, int (*)(int)));
 _PROTOTYP(char *tgoto,(const char *, int, int));
 
 #endif /* CK_CURSES */
