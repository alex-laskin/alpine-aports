Patch-Source: https://core.tcl-lang.org/tk/info/58880acd5966f749

--- a/src/gui/tcltk/tk/generic/tkEntry.c
+++ b/src/gui/tcltk/tk/generic/tkEntry.c
@@ -3153,7 +3153,7 @@ EntryValidate(
 				 * string). */
 {
     register Tcl_Interp *interp = entryPtr->interp;
-    int code, bool;
+    int code, isOK;
 
     code = Tcl_EvalEx(interp, cmd, -1, TCL_EVAL_GLOBAL | TCL_EVAL_DIRECT);
 
@@ -3175,7 +3175,7 @@ EntryValidate(
      */
 
     if (Tcl_GetBooleanFromObj(interp, Tcl_GetObjResult(interp),
-	    &bool) != TCL_OK) {
+	    &isOK) != TCL_OK) {
 	Tcl_AddErrorInfo(interp,
 		 "\n    (invalid boolean result from validation command)");
 	Tcl_BackgroundException(interp, TCL_ERROR);
@@ -3184,7 +3184,7 @@ EntryValidate(
     }
 
     Tcl_ResetResult(interp);
-    return (bool ? TCL_OK : TCL_BREAK);
+    return (isOK ? TCL_OK : TCL_BREAK);
 }
 
 /*
--- a/src/gui/tcltk/tktable/generic/tkTable.c
+++ b/src/gui/tcltk/tktable/generic/tkTable.c
@@ -3795,7 +3795,7 @@ TableValidateChange(tablePtr, r, c, old, new, index)
      int index;			/* index of insert/delete, -1 otherwise */
 {
     register Tcl_Interp *interp = tablePtr->interp;
-    int code, bool;
+    int code, isOK;
     Tk_RestrictProc *rstrct;
     ClientData cdata;
     Tcl_DString script;
@@ -3834,13 +3834,13 @@ TableValidateChange(tablePtr, r, c, old, new, index)
 	Tcl_BackgroundError(interp);
 	code = TCL_ERROR;
     } else if (Tcl_GetBooleanFromObj(interp, Tcl_GetObjResult(interp),
-				     &bool) != TCL_OK) {
+				     &isOK) != TCL_OK) {
 	Tcl_AddErrorInfo(interp,
 			 "\n\tboolean not returned by validation command");
 	Tcl_BackgroundError(interp);
 	code = TCL_ERROR;
     } else {
-	code = (bool) ? TCL_OK : TCL_BREAK;
+	code = (isOK) ? TCL_OK : TCL_BREAK;
     }
     Tcl_SetObjResult(interp, Tcl_NewObj());
 
