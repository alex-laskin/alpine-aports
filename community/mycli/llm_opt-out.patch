https://github.com/dbcli/mycli/issues/1332

--- a/mycli/main.py
+++ b/mycli/main.py
@@ -791,31 +791,6 @@ class MyCli:
                     logger.error("traceback: %r", traceback.format_exc())
                     self.echo(str(e), err=True, fg="red")
                     return
-                # LLM command support
-                while special.is_llm_command(text):
-                    start = time()
-                    try:
-                        assert sqlexecute.conn is not None
-                        cur = sqlexecute.conn.cursor()
-                        context, sql, duration = special.handle_llm(text, cur)
-                        if context:
-                            click.echo("LLM Response:")
-                            click.echo(context)
-                            click.echo("---")
-                        click.echo(f"Time: {duration:.2f} seconds")
-                        text = self.prompt_app.prompt(default=sql or '')
-                    except KeyboardInterrupt:
-                        return
-                    except special.FinishIteration as e:
-                        if e.results:
-                            return output_res(e.results, start)
-                        else:
-                            return None
-                    except RuntimeError as e:
-                        logger.error("sql: %r, error: %r", text, e)
-                        logger.error("traceback: %r", traceback.format_exc())
-                        self.echo(str(e), err=True, fg="red")
-                        return
 
             text = text.strip()
 
--- a/mycli/packages/completion_engine.py
+++ b/mycli/packages/completion_engine.py
@@ -105,8 +105,6 @@ def suggest_special(text: str) -> list[d
         ]
     elif cmd in ["\\.", "source"]:
         return [{"type": "file_name"}]
-    if cmd in ["\\llm", "\\ai"]:
-        return [{"type": "llm"}]
 
     return [{"type": "keyword"}, {"type": "special"}]
 
--- a/mycli/packages/special/__init__.py
+++ b/mycli/packages/special/__init__.py
@@ -34,12 +34,6 @@ from mycli.packages.special.iocommands i
     write_pipe_once,
     write_tee,
 )
-from mycli.packages.special.llm import (
-    FinishIteration,
-    handle_llm,
-    is_llm_command,
-    sql_using_llm,
-)
 from mycli.packages.special.main import (
     CommandNotFound,
     execute,
@@ -63,9 +57,7 @@ __all__: list[str] = [
     'get_current_delimiter',
     'get_editor_query',
     'get_filename',
-    'handle_llm',
     'is_expanded_output',
-    'is_llm_command',
     'is_pager_enabled',
     'is_redirected',
     'is_timing_enabled',
@@ -84,7 +76,6 @@ __all__: list[str] = [
     'set_timing_enabled',
     'special_command',
     'split_queries',
-    'sql_using_llm',
     'status',
     'unset_once_if_written',
     'write_once',
--- a/mycli/sqlcompleter.py
+++ b/mycli/sqlcompleter.py
@@ -11,7 +11,6 @@ from prompt_toolkit.completion.base impo
 from mycli.packages.completion_engine import suggest_type
 from mycli.packages.filepaths import complete_path, parse_path, suggest_path
 from mycli.packages.parseutils import last_word
-from mycli.packages.special import llm
 from mycli.packages.special.favoritequeries import FavoriteQueries
 
 _logger = logging.getLogger(__name__)
@@ -1204,19 +1203,6 @@ class SQLCompleter(Completer):
             elif suggestion["type"] == "file_name":
                 file_names_m = self.find_files(word_before_cursor)
                 completions.extend(file_names_m)
-            elif suggestion["type"] == "llm":
-                if not word_before_cursor:
-                    tokens = document.text.split()[1:]
-                else:
-                    tokens = document.text.split()[1:-1]
-                possible_entries = llm.get_completions(tokens)
-                subcommands_m = self.find_matches(
-                    word_before_cursor,
-                    possible_entries,
-                    start_only=False,
-                    fuzzy=True,
-                )
-                completions.extend(subcommands_m)
 
         return completions
 
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -21,7 +21,6 @@ dependencies = [
     "pyperclip >= 1.8.1",
     "pycryptodomex",
     "pyfzf >= 0.3.1",
-    "llm>=0.19.0",
     "setuptools",                   # Required by llm commands to install models
     "pip",
 ]
