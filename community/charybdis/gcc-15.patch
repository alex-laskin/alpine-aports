diff --git a/authd/authd.c b/authd/authd.c
index 974b6a02..2271ca4c 100644
--- a/authd/authd.c
+++ b/authd/authd.c
@@ -30,6 +30,11 @@ static void handle_reload(int parc, char *parv[]);
 static void handle_stat(int parc, char *parv[]);
 static void handle_options(int parc, char *parv[]);
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 rb_helper *authd_helper = NULL;
 authd_cmd_handler authd_cmd_handlers[256] = {
 	['C'] = handle_new_connection,
@@ -203,7 +208,7 @@ main(int argc, char *argv[])
 	rb_set_time();
 	setup_signals();
 
-	authd_option_handlers = rb_dictionary_create("authd options handlers", rb_strcasecmp);
+	authd_option_handlers = rb_dictionary_create("authd options handlers", strcasecmp_wrapper);
 
 	init_resolver();
 	init_providers();
diff --git a/ircd/authproc.c b/ircd/authproc.c
index e1545bfc..f60b51e9 100644
--- a/ircd/authproc.c
+++ b/ircd/authproc.c
@@ -69,6 +69,11 @@ static struct ev_entry *timeout_ev;
 
 rb_dictionary *bl_stats;
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 rb_dlink_list opm_list;
 struct OPMListener opm_listeners[LISTEN_LAST];
 
@@ -591,7 +596,7 @@ add_blacklist(const char *host, const char *reason, uint8_t iptype, rb_dlink_lis
 	size_t s = 0;
 
 	if(bl_stats == NULL)
-		bl_stats = rb_dictionary_create("blacklist statistics", rb_strcasecmp);
+		bl_stats = rb_dictionary_create("blacklist statistics", strcasecmp_wrapper);
 
 	/* Build a list of comma-separated values for authd.
 	 * We don't check for validity - do it elsewhere.
diff --git a/ircd/cache.c b/ircd/cache.c
index c720e0ab..9307eb8f 100644
--- a/ircd/cache.c
+++ b/ircd/cache.c
@@ -49,6 +49,11 @@ char user_motd_changed[MAX_DATE_STRING];
 rb_dictionary *help_dict_oper = NULL;
 rb_dictionary *help_dict_user = NULL;
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 /* init_cache()
  *
  * inputs	-
@@ -68,8 +73,8 @@ init_cache(void)
 	oper_motd = cache_file(ircd_paths[IRCD_PATH_IRCD_OMOTD], "opers.motd", 0);
 	memset(&links_cache_list, 0, sizeof(links_cache_list));
 
-	help_dict_oper = rb_dictionary_create("oper help", rb_strcasecmp);
-	help_dict_user = rb_dictionary_create("user help", rb_strcasecmp);
+	help_dict_oper = rb_dictionary_create("oper help", strcasecmp_wrapper);
+	help_dict_user = rb_dictionary_create("user help", strcasecmp_wrapper);
 }
 
 /*
diff --git a/ircd/capability.c b/ircd/capability.c
index f82821d9..257240c3 100644
--- a/ircd/capability.c
+++ b/ircd/capability.c
@@ -25,6 +25,11 @@
 
 static rb_dlink_list capability_indexes = { NULL, NULL, 0 };
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 struct CapabilityEntry *
 capability_find(struct CapabilityIndex *idx, const char *cap)
 {
@@ -145,7 +150,7 @@ capability_index_create(const char *name)
 
 	idx = rb_malloc(sizeof(struct CapabilityIndex));
 	idx->name = name;
-	idx->cap_dict = rb_dictionary_create(name, rb_strcasecmp);
+	idx->cap_dict = rb_dictionary_create(name, strcasecmp_wrapper);
 	idx->highest_bit = 1;
 
 	rb_dlinkAdd(idx, &idx->node, &capability_indexes);
diff --git a/ircd/client.c b/ircd/client.c
index 76cb826b..7810c8a2 100644
--- a/ircd/client.c
+++ b/ircd/client.c
@@ -94,6 +94,10 @@ struct abort_client
 
 static rb_dlink_list abort_list;
 
+static int irccmp_wrapper(const void *a, const void *b)
+{
+	return irccmp((const char *)a, (const char *)b);
+}
 
 /*
  * init_client
@@ -120,7 +124,7 @@ init_client(void)
 	rb_event_addish("exit_aborted_clients", exit_aborted_clients, NULL, 1);
 	rb_event_add("flood_recalc", flood_recalc, NULL, 1);
 
-	nd_dict = rb_dictionary_create("nickdelay", irccmp);
+	nd_dict = rb_dictionary_create("nickdelay", irccmp_wrapper);
 }
 
 /*
diff --git a/ircd/parse.c b/ircd/parse.c
index 250424bf..39c7751a 100644
--- a/ircd/parse.c
+++ b/ircd/parse.c
@@ -53,6 +53,11 @@ static int handle_command(struct Message *, struct MsgBuf *, struct Client *, st
 
 static char buffer[1024];
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 /* turn a string into a parc/parv pair */
 
 char *reconstruct_parv(int parc, const char *parv[])
@@ -274,7 +279,7 @@ handle_encap(struct MsgBuf *msgbuf_p, struct Client *client_p, struct Client *so
 void
 clear_hash_parse()
 {
-	cmd_dict = rb_dictionary_create("command", rb_strcasecmp);
+	cmd_dict = rb_dictionary_create("command", strcasecmp_wrapper);
 }
 
 /* mod_add_cmd
diff --git a/ircd/s_conf.c b/ircd/s_conf.c
index a828c1aa..27d089bb 100644
--- a/ircd/s_conf.c
+++ b/ircd/s_conf.c
@@ -84,6 +84,11 @@ static int verify_access(struct Client *client_p, const char *username);
 static struct ConfItem *find_address_conf_by_client(struct Client *client_p, const char *username);
 static int attach_iline(struct Client *, struct ConfItem *);
 
+static int strcasecmp_wrapper(const void *a, const void *b)
+{
+	return rb_strcasecmp((const char *)a, (const char *)b);
+}
+
 void
 init_s_conf(void)
 {
@@ -811,7 +816,7 @@ set_default_conf(void)
 	ConfigFileEntry.hide_opers_in_whois = 0;
 
 	if (!alias_dict)
-		alias_dict = rb_dictionary_create("alias", rb_strcasecmp);
+		alias_dict = rb_dictionary_create("alias", strcasecmp_wrapper);
 }
 
 /*
diff --git a/librb/include/rb_dictionary.h b/librb/include/rb_dictionary.h
index 2baf027d..d30e91b1 100644
--- a/librb/include/rb_dictionary.h
+++ b/librb/include/rb_dictionary.h
@@ -33,7 +33,7 @@ typedef struct rb_dictionary_iter rb_dictionary_iter;
 
 struct rb_dictionary;
 
-typedef int (*DCF)(/* const void *a, const void *b */);
+typedef int (*DCF)(const void *a, const void *b);
 
 struct rb_dictionary_element
 {
diff --git a/tests/rb_dictionary1.c b/tests/rb_dictionary1.c
index 4328e448..0ed7f950 100644
--- a/tests/rb_dictionary1.c
+++ b/tests/rb_dictionary1.c
@@ -31,9 +31,14 @@
 
 #define MKTEXT(n) &text[sizeof(text) - ((n) + 1)]
 
+static int strcmp_wrapper(const void *a, const void *b)
+{
+	return strcmp((const char *)a, (const char *)b);
+}
+
 static void replace1(void)
 {
-	rb_dictionary *dict = rb_dictionary_create("replace1", strcmp);
+	rb_dictionary *dict = rb_dictionary_create("replace1", strcmp_wrapper);
 	rb_dictionary_element *original = rb_dictionary_add(dict, "test", "data1");
 
 	ok(original != NULL, MSG);
diff --git a/tests/serv_connect1.c b/tests/serv_connect1.c
index df89c57b..503576d6 100644
--- a/tests/serv_connect1.c
+++ b/tests/serv_connect1.c
@@ -55,7 +55,9 @@ void rb_connect_tcp(rb_fde_t *F, struct sockaddr *dest, struct sockaddr *clocal,
 	last_connect_callback = callback;
 	last_connect_data = data;
 
-	void *(*func)() = dlsym(RTLD_NEXT, "rb_connect_tcp");
+	int (*func)(rb_fde_t *, struct sockaddr *, struct sockaddr *, CNCB *, void *, int) =
+		(int (*)(rb_fde_t *, struct sockaddr *, struct sockaddr *, CNCB *, void *, int))
+		dlsym(RTLD_NEXT, "rb_connect_tcp");
 	func(F, dest, clocal, callback, data, timeout);
 }
 
