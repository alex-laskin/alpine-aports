diff --git a/MODULE.bazel b/MODULE.bazel
index 0a5ea5b7da..7fad4e901c 100644
--- a/MODULE.bazel
+++ b/MODULE.bazel
@@ -29,7 +29,7 @@ bazel_dep(name = "rules_proto", version = "6.0.0")
 bazel_dep(name = "rules_jvm_external", version = "6.0")
 bazel_dep(name = "rules_python", version = "0.33.2")
 bazel_dep(name = "rules_testing", version = "0.6.0")
-bazel_dep(name = "googletest", version = "1.14.0", repo_name = "com_google_googletest")
+bazel_dep(name = "googletest", version = "1.14.0.bcr.1", repo_name = "com_google_googletest")
 bazel_dep(name = "with_cfg.bzl", version = "0.2.4")
 
 # TODO(pcloudy): Add remoteapis and googleapis as Bazel modules in the BCR.
@@ -63,7 +63,7 @@ single_version_override(
 # The following Bazel modules are not direct dependencies for building Bazel,
 # but are required for visibility from DIST_ARCHIVE_REPOS in repositories.bzl
 bazel_dep(name = "apple_support", version = "1.23.1")
-bazel_dep(name = "abseil-cpp", version = "20230125.1")
+bazel_dep(name = "abseil-cpp", version = "20240116.2")
 bazel_dep(name = "c-ares", version = "1.15.0")
 bazel_dep(name = "rules_go", version = "0.39.1")
 bazel_dep(name = "rules_kotlin", version = "1.9.0")
diff --git a/src/main/cpp/archive_utils.h b/src/main/cpp/archive_utils.h
index 18856ab67d..5298a36d6a 100644
--- a/src/main/cpp/archive_utils.h
+++ b/src/main/cpp/archive_utils.h
@@ -15,6 +15,7 @@
 #ifndef BAZEL_SRC_MAIN_CPP_ARCHIVE_UTILS_H_
 #define BAZEL_SRC_MAIN_CPP_ARCHIVE_UTILS_H_
 
+#include <cstdint>
 #include <string>
 #include <vector>
 
diff --git a/src/main/cpp/blaze.h b/src/main/cpp/blaze.h
index 2350fa1449..da24ec8f4d 100644
--- a/src/main/cpp/blaze.h
+++ b/src/main/cpp/blaze.h
@@ -14,6 +14,7 @@
 #ifndef BAZEL_SRC_MAIN_CPP_BLAZE_H_
 #define BAZEL_SRC_MAIN_CPP_BLAZE_H_
 
+#include <cstdint>
 #include <string>
 
 #include "src/main/cpp/option_processor.h"
diff --git a/src/main/native/unix_jni.h b/src/main/native/unix_jni.h
index c7a1a73af3..4d757c9696 100644
--- a/src/main/native/unix_jni.h
+++ b/src/main/native/unix_jni.h
@@ -18,6 +18,7 @@
 #define BAZEL_SRC_MAIN_NATIVE_UNIX_JNI_H__
 
 #include <errno.h>
+#include <features.h>
 #include <jni.h>
 #include <sys/stat.h>
 
@@ -25,8 +26,7 @@
 
 namespace blaze_jni {
 
-#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
-// stat64 is deprecated on OS X/BSD.
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__GLIBC__) || defined(__linux__)
 typedef struct stat portable_stat_struct;
 #define portable_stat ::stat
 #define portable_lstat ::lstat
diff --git a/src/main/native/unix_jni_linux.cc b/src/main/native/unix_jni_linux.cc
index 1aa0f252f2..224fc4c00c 100644
--- a/src/main/native/unix_jni_linux.cc
+++ b/src/main/native/unix_jni_linux.cc
@@ -13,6 +13,7 @@
 // limitations under the License.
 
 #include <errno.h>
+#include <features.h>
 #include <stdlib.h>
 #include <string.h>
 #include <sys/stat.h>
@@ -44,7 +45,11 @@ std::string ErrorMessage(int error_number) {
 
 int portable_fstatat(
     int dirfd, char *name, portable_stat_struct *statbuf, int flags) {
+#if defined(__GLIBC__) && !defined(__linux__)
   return fstatat64(dirfd, name, statbuf, flags);
+#else
+  return fstatat(dirfd, name, statbuf, flags);
+#endif
 }
 
 int StatSeconds(const portable_stat_struct &statbuf, StatTimes t) {
diff --git a/src/tools/singlejar/port.h b/src/tools/singlejar/port.h
index 1bf71fc16a..0380a952bd 100644
--- a/src/tools/singlejar/port.h
+++ b/src/tools/singlejar/port.h
@@ -34,6 +34,13 @@ typedef off_t off64_t;
 typedef __int64 off64_t;
 #elif defined(__OpenBSD__)
 typedef int64_t off64_t;
+#elif defined(__GLIBC__) || defined(__linux__)
+#include <features.h>
+#if defined(__GNU_LIBRARY__) || defined(__GLIBC__)
+typedef off64_t off_t;
+#else
+typedef off_t off64_t;
+#endif
 #endif
 static_assert(sizeof(off64_t) == 8, "File offset type must be 64-bit");
 
