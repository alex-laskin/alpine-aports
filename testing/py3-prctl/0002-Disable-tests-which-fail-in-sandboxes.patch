From 9db7419ce20b09f8fcf727fa7d2de12197fd0ffb Mon Sep 17 00:00:00 2001
From: Hugo Osvaldo Barrera <hugo@whynothugo.nl>
Date: Thu, 14 Aug 2025 13:48:20 +0200
Subject: [PATCH] Disable tests which fail in sandboxes

Some tests fail inside rootbld, while others fail in docker/CI.

Disable these tests entirely.
---
 test_prctl.py | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/test_prctl.py b/test_prctl.py
index 479c085..5dee220 100644
--- a/test_prctl.py
+++ b/test_prctl.py
@@ -58,6 +58,7 @@ class PrctlTest(unittest.TestCase):
         self.assertRaises(AttributeError, getattr, prctl, 'CAPBSET_READ')
         self.assertEqual(prctl.SET_PTRACER_ANY, _prctl.PR_SET_PTRACER_ANY)
 
+    @unittest.skip('fails on rootbld sandbox')
     @require('PR_CAPBSET_READ')
     def test_capbset(self):
         """Test the get_capbset/set_capbset functions"""
@@ -69,6 +70,7 @@ class PrctlTest(unittest.TestCase):
             self.assertRaises(OSError, prctl.capbset_drop, prctl.CAP_MKNOD)
         self.assertRaises(ValueError, prctl.capbset_read, 999)
 
+    @unittest.skip('fails on rootbld sandbox')
     @require('PR_CAPBSET_READ')
     def test_capbset_object(self):
         """Test manipulation of the capability bounding set via the capbset object"""
@@ -212,6 +214,7 @@ class PrctlTest(unittest.TestCase):
         prctl.set_name(name)
         self.assertEqual(prctl.get_name(), name[:15])
 
+    @unittest.skip('fails on rootbld sandbox')
     @require('get_no_new_privs')
     def test_no_new_privs(self):
         """Test the no_new_privs function"""
@@ -278,6 +281,7 @@ class PrctlTest(unittest.TestCase):
             os._exit(0)
         self.assertRaises(OSError, prctl.set_ptracer, new_pid)
 
+    @unittest.skipIf("GITLAB_CI" in os.environ, "Test fails on CI environment")
     @require('get_seccomp')
     def test_seccomp(self):
         """Test manipulation of the seccomp setting"""
@@ -322,6 +326,7 @@ class PrctlTest(unittest.TestCase):
                 prctl.securebits.noroot = True
             self.assertRaises(OSError, set_true)
 
+    @unittest.skipIf("GITLAB_CI" in os.environ, "Test fails on CI environment")
     @require('set_speculation_ctrl')
     def test_speculation_ctrl(self):
        self.assertTrue(prctl.get_speculation_ctrl(prctl.SPEC_STORE_BYPASS) > 0)
-- 
2.51.0

