maintainer="Achill Gilgenast <achill@achill.org>"
pkgname=buildbot
pkgver=4.3.0
pkgrel=0
pkgdesc="Python-based continuous integration testing framework"
url="https://www.buildbot.net/"
arch="noarch !armhf !loongarch64 !ppc64le !riscv64 !s390x !x86" # TODO: rollup
license="GPL-3.0-only"
depends="
	py3-alembic
	py3-autobahn
	py3-croniter
	py3-evalidate
	py3-jinja2
	py3-jwt
	py3-msgpack
	py3-sqlalchemy
	py3-treq
	py3-twisted
	py3-txaio
	"
makedepends="
	py3-gpep517
	py3-setuptools
	py3-wheel
	yarn
	"
checkdepends="py3-parameterized"
subpackages="
	$pkgname-worker
	$pkgname-badges
	$pkgname-console-view:console_view
	$pkgname-grid-view:grid_view
	$pkgname-waterfall-view:waterfall_view
	$pkgname-wsgi-dashboards:wsgi_dashboards
	$pkgname-www
	$pkgname-pyc
	"
source="$pkgname-$pkgver.tar.gz::https://github.com/buildbot/buildbot/archive/refs/tags/v$pkgver.tar.gz"

get_pyver() {
	python -c "import sys; print('{}.{}'.format(*sys.version_info[:2]))"
}

build() {
	for i in www/plugin_support www/data-module www/ui; do
		cd "$builddir/$i" && msg "Building $i"

		yarn install --pure-lockfile
		yarn run build
	done

	for i in pkg master worker \
		www/base www/console_view www/grid_view www/waterfall_view \
		www/wsgi_dashboards www/badges;
	do
		cd "$builddir/$i" && msg "Building $i"

		PYTHONPATH="$srcdir/.tmp/usr/lib/python$(get_pyver)/site-packages" \
		gpep517 build-wheel --wheel-dir .dist --output-fd 3 3>&1 >&2

		# pkg is required for www, www is required for tests
		python3 -m installer -d "$srcdir/.tmp" .dist/*.whl
	done

}

check() {
	export PYTHONPATH="$srcdir/.tmp/usr/lib/python$(get_pyver)/site-packages"

	cd "$builddir/master"
	trial buildbot

	cd "$builddir/worker"
	trial buildbot_worker
}

package() {
	cd "$builddir/master"
	python3 -m installer -d "$pkgdir" \
		.dist/*.whl
}

worker() {
	pkgdesc="$pkgdesc (worker daemon)"
	depends="py3-twisted py3-autobahn py3-msgpack py3-zope-interface"

	cd "$builddir/worker"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

badges() {
	pkgdesc="$pkgdesc (badges)"
	depends="$pkgname=$pkgver-r$pkgrel $pkgname-www=$pkgver-r$pkgrel"

	cd "$builddir/www/badges"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

console_view() {
	pkgdesc="$pkgdesc (console view plugin)"
	depends="$pkgname=$pkgver-r$pkgrel $pkgname-www=$pkgver-r$pkgrel"

	cd "$builddir/www/console_view"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

grid_view() {
	pkgdesc="$pkgdesc (grid view plugin)"
	depends="$pkgname=$pkgver-r$pkgrel $pkgname-www=$pkgver-r$pkgrel"

	cd "$builddir/www/grid_view"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

waterfall_view() {
	pkgdesc="$pkgdesc (waterfall view plugin)"
	depends="$pkgname=$pkgver-r$pkgrel $pkgname-www=$pkgver-r$pkgrel"

	cd "$builddir/www/waterfall_view"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

wsgi_dashboards() {
	pkgdesc="$pkgdesc (wsgi dashboards integration plugin)"
	depends="$pkgname=$pkgver-r$pkgrel $pkgname-www=$pkgver-r$pkgrel"

	cd "$builddir/www/wsgi_dashboards"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

www() {
	pkgdesc="$pkgdesc (UI)"
	depends="$pkgname=$pkgver-r$pkgrel"

	cd "$builddir/www/base"
	python3 -m installer -d "$subpkgdir" \
		.dist/*.whl
}

sha512sums="
f86f7b1ed0b9abaad8ed6e6bc2e5d42dea43c09efc4bec93aa6a27dde8baff1f68df829a05cf890c82378a9d8bc91d26c7f24180876b15d316b1b80f3bbc0eed  buildbot-4.3.0.tar.gz
"
