missing libstdc++13 includes
--
--- ./engine/src/flutter/third_party/vulkan_memory_allocator/include/vk_mem_alloc.h.orig
+++ ./engine/src/flutter/third_party/vulkan_memory_allocator/include/vk_mem_alloc.h
@@ -2566,6 +2566,7 @@
 #undef VMA_IMPLEMENTATION
 
 #include <cstdint>
+#include <cstdio>
 #include <cstdlib>
 #include <cstring>
 #include <utility>
--- ./engine/src/flutter/third_party/swiftshader/third_party/llvm-subzero/include/llvm/ADT/STLExtras.h.orig
+++ ./engine/src/flutter/third_party/swiftshader/third_party/llvm-subzero/include/llvm/ADT/STLExtras.h
@@ -21,6 +21,7 @@
 #include <cassert>
 #include <cstddef> // for std::size_t
 #include <cstdlib> // for qsort
+#include <cstdint>
 #include <functional>
 #include <iterator>
 #include <memory>
--- ./engine/src/flutter/fml/synchronization/semaphore.h.orig
+++ ./engine/src/flutter/fml/synchronization/semaphore.h
@@ -5,6 +5,7 @@
 #ifndef FLUTTER_FML_SYNCHRONIZATION_SEMAPHORE_H_
 #define FLUTTER_FML_SYNCHRONIZATION_SEMAPHORE_H_
 
+#include <cstdint>
 #include <memory>
 
 #include "flutter/fml/macros.h"
--- ./engine/src/flutter/impeller/typographer/font.h.orig
+++ ./engine/src/flutter/impeller/typographer/font.h
@@ -5,6 +5,7 @@
 #ifndef FLUTTER_IMPELLER_TYPOGRAPHER_FONT_H_
 #define FLUTTER_IMPELLER_TYPOGRAPHER_FONT_H_
 
+#include <cstdint>
 #include <memory>
 
 #include "fml/hash_combine.h"
--- ./engine/src/flutter/impeller/renderer/backend/gles/handle_gles.h.orig
+++ ./engine/src/flutter/impeller/renderer/backend/gles/handle_gles.h
@@ -5,6 +5,7 @@
 #ifndef FLUTTER_IMPELLER_RENDERER_BACKEND_GLES_HANDLE_GLES_H_
 #define FLUTTER_IMPELLER_RENDERER_BACKEND_GLES_HANDLE_GLES_H_
 
+#include <cstdint>
 #include <optional>
 #include <sstream>
 #include <string>
--- ./engine/src/flutter/display_list/dl_storage.h.orig
+++ ./engine/src/flutter/display_list/dl_storage.h
@@ -5,6 +5,7 @@
 #ifndef FLUTTER_DISPLAY_LIST_DL_STORAGE_H_
 #define FLUTTER_DISPLAY_LIST_DL_STORAGE_H_
 
+#include <cstdint>
 #include <memory>
 
 #include "flutter/fml/logging.h"
--- ./engine/src/flutter/tools/licenses_cpp/src/filter.cc.orig
+++ ./engine/src/flutter/tools/licenses_cpp/src/filter.cc
@@ -5,7 +5,7 @@
 #include "flutter/tools/licenses_cpp/src/filter.h"
 #include <fstream>
 
-absl::StatusOr<Filter> Filter::Open(std::string_view path) {
+absl::StatusOr<Filter> Filter::Open(std::string path) {
   std::ifstream input;
   input.open(path);
   absl::StatusOr<Filter> result = Open(input);
--- ./engine/src/flutter/tools/licenses_cpp/src/filter.h.orig
+++ ./engine/src/flutter/tools/licenses_cpp/src/filter.h
@@ -16,7 +16,7 @@
 /// This is used for things like the include.txt and exclude.txt.
 class Filter {
  public:
-  static absl::StatusOr<Filter> Open(std::string_view path);
+  static absl::StatusOr<Filter> Open(std::string path);
 
   static absl::StatusOr<Filter> Open(std::istream& input);
 
--- ./engine/src/flutter/shell/platform/common/client_wrapper/include/flutter/binary_messenger.h.orig
+++ ./engine/src/flutter/shell/platform/common/client_wrapper/include/flutter/binary_messenger.h
@@ -6,6 +6,7 @@
 #define FLUTTER_SHELL_PLATFORM_COMMON_CLIENT_WRAPPER_INCLUDE_FLUTTER_BINARY_MESSENGER_H_
 
 #include <functional>
+#include <cstdint>
 #include <string>
 
 namespace flutter {
