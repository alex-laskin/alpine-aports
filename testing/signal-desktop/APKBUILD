# Contributor: lauren n. liberda <lauren@selfisekai.rocks>
# Contributor: Antoine Martin (ayakael) <dev@ayakael.net>
# Maintainer: Antoine Martin (ayakael) <dev@ayakael.net>
pkgname=signal-desktop
pkgver=7.76.0
pkgrel=0
pkgdesc="A messaging app for simple private communication with friends"
url="https://github.com/signalapp/Signal-Desktop/"
# same as electron
arch="aarch64 x86_64"
license="AGPL-3.0-only"
_llvmver=21
depends="
	electron
	font-barlow
	font-eb-garamond
	font-inter
	font-parisienne
	"
makedepends="
	alsa-lib-dev
	aom-dev
	brotli-dev
	bsd-compat-headers
	cargo
	cargo-auditable
	cbindgen
	clang$_llvmver-dev
	cmake
	crc32c-dev
	dav1d-dev
	electron-dev
	electron-tasje
	ffmpeg-dev
	git-lfs
	glib-dev
	gn
	jsoncpp-dev
	libjpeg-turbo-dev
	libepoxy-dev
	libsecret-dev
	libvpx-dev
	libwebp-dev
	libxml2-dev
	lld
	llvm$_llvmver-dev
	mesa-dev
	nodejs
	npm
	pnpm
	openh264-dev
	openssl-dev
	opus-dev
	pipewire-dev
	protoc
	pulseaudio-dev
	py3-setuptools
	python3
	re2-dev
	samurai
	sqlcipher-dev
	vips-dev
	yarn
	"
options="net !check"

# use _check_depends to validate this
_libsignalver=0.83.0
_ringrtcver=2.59.0
_webrtcver=7339c
_sqlcipherver=2.4.4

source="
	https://github.com/signalapp/Signal-Desktop/archive/refs/tags/v$pkgver/Signal-Desktop-$pkgver.tar.gz
	https://github.com/signalapp/libsignal/archive/refs/tags/v$_libsignalver/libsignal-$_libsignalver.tar.gz
	https://github.com/signalapp/ringrtc/archive/refs/tags/v$_ringrtcver/ringrtc-$_ringrtcver.tar.gz
	https://github.com/signalapp/node-sqlcipher/archive/refs/tags/v$_sqlcipherver/node-sqlcipher-$_sqlcipherver.tar.gz
	https://ayakael.net/api/packages/mirrors/generic/webrtc/$_webrtcver/webrtc-$_webrtcver.tar.zst

	libsignal-auditable.patch
	signal-use-system-sqlcipher.patch
	signal-disable-updates.patch
	signal-update-links.patch
	signal-show-window-please.patch
	signal-rollback-locale-changes.patch
	signal-do-not-package-sqlcipher-deps.patch
	signal-do-not-package-desktop-entry.patch
	ringrtc-webrtc-renamed.patch
	ringrtc-use-sh.patch
	webrtc-shared-libs.patch
	webrtc-compiler.patch
	webrtc-use-only-payloadtypesuggester-for-pt-assignement.patch
	webrtc-fix-declaration-that-change-meaning-inside-class.patch
	webrtc-rtcbase-platform-thread-type-do-not-include-linux-prctl-header.patch

	signal-desktop.sh
	"
builddir="$srcdir"

# webrtc broken on clang https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101227
export CC=gcc
export CXX=g++

# required to find the tools
export AR=ar
export NM=nm
export LD=g++

# less log spam, reproducible, allow lto with rust
export CFLAGS="${CFLAGS/-g/} -O2 -Wno-error -Wno-deprecated-builtins -Wno-unknown-warning-option -Wno-builtin-macro-redefined -Wno-deprecated-declarations"
export CXXFLAGS="${CXXFLAGS/-g/} -O2 -Wno-error -Wno-deprecated-builtins -Wno-unknown-warning-option -Wno-builtin-macro-redefined -Wno-deprecated-declarations"
export CPPFLAGS="$CPPFLAGS -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__="

# stdatomic from compiler-rt uses implicit function declaration
export CFLAGS="$CFLAGS -Wno-implicit-function-declaration"
export CXXFLAGS="$CXXFLAGS -Wno-implicit-function-declaration"

export CARGO_PROFILE_RELEASE_OPT_LEVEL=2
export CARGO_PROFILE_RELEASE_STRIP="symbols"
#export RUSTFLAGS="$RUSTFLAGS -C linker=clang"

export YARN_CACHE_FOLDER="$srcdir/.yarn"

_update_depends() {
	msg "Updating extra dependencies version information in $APKBUILD..."
	# _libsignalver: follow signal-desktop package.json -> @signalapp/libsignal-client
	# _ringrtcver: follow signal-desktop package.json -> @signalapp/ringrtc
	# _webrtcver: follow ringrtc (on version above) -> config/version.properties -> webrtc.version
	#     downloading tarball generated with abuild snapshot (with gclient dependencies fetched)
	# _sqlcipherver: follow signal-desktop package.json -> @signalapp/sqlcipher

	local _libsignalver=$(curl --silent https://raw.githubusercontent.com/signalapp/Signal-Desktop/v$pkgver/package.json | grep "@signalapp/libsignal-client\": \"" | awk '{print $2}' | tr -d ',' | tr -d '"' | head -n 1)
	local _ringrtcver=$(curl --silent https://raw.githubusercontent.com/signalapp/Signal-Desktop/v$pkgver/package.json | grep "@signalapp/ringrtc\": \"" | awk '{print $2}' | tr -d ',' | tr -d '"' | head -n 1)
	local _webrtcver=$(curl --silent https://raw.githubusercontent.com/signalapp/ringrtc/v$_ringrtcver/config/version.properties | awk -F '=' '{if($1 == "webrtc.version"){print $2}}' | head -n 1)
	local _sqlcipherver=$(curl --silent https://raw.githubusercontent.com/signalapp/Signal-Desktop/v$pkgver/package.json | grep "@signalapp/sqlcipher\": \"" | awk '{print $2}' | tr -d ',' | tr -d '"' | head -n 1)

	sed -i \
		-e "s|^_libsignalver=.*|_libsignalver=$_libsignalver|" \
		-e "s|^_ringrtcver=.*|_ringrtcver=$_ringrtcver|" \
		-e "s|^_webrtcver=.*|_webrtcver=$_webrtcver|" \
		-e "s|^_sqlcipherver=.*|_sqlcipherver=$_sqlcipherver|" \
		$APKBUILD
}

# webrtc only, the other dependencies are fine with tarballs
_distbucket="sakamoto/lnl-aports-snapshots/"
snapshot() {
	mkdir -p "$srcdir"
	cd "$srcdir"

	# cleanup if retrying
	rm -rf src
	rm -rf webrtc-$_webrtcver
	rm -f webrtc-$_webrtcver.tar
	rm -f webrtc-$_webrtcver.tar.zst

	echo "
solutions = [{
	'name': 'src',
	'url': 'https://github.com/signalapp/webrtc.git@$_webrtcver',
}]
target_cpu = ['x64', 'arm64']
target_cpu_only = True
" > .gclient

	gclient sync --no-history --nohooks --tpot-cipd-ignore-platformed

	# needed DEPS hooks
	python3 'src/build/landmines.py' --landmine-scripts 'src/tools_webrtc/get_landmines.py' --src-dir 'src'
	python3 'src/build/util/lastchange.py' -o 'src/build/util/LASTCHANGE'

	for elf in $(scanelf -RA -F "%F" src); do
		rm -f "$elf"
	done

	mv src webrtc-$_webrtcver

	msg "generating tarball.."
	tar -cf webrtc-$_webrtcver.tar \
		--exclude="ChangeLog*" \
		--exclude="testdata/" \
		--exclude="test_data/" \
		--exclude="android_rust_toolchain/toolchain/" \
		--exclude="base/" \
		--exclude-backups \
		--exclude-caches-all \
		--exclude-vcs \
		webrtc-$_webrtcver

	zstd --auto-threads=logical --ultra --long -22 -T"${ZSTD_LIMIT:-0}" -vv webrtc-$_webrtcver.tar -o "$SRCDEST"/webrtc-$_webrtcver.tar.zst
	mcli cp "$SRCDEST"/webrtc-$_webrtcver.tar.zst "$_distbucket"
}

prepare() {
	# Moves to builddir to use abuild patch logics
	for i in Signal-Desktop-$pkgver libsignal-$_libsignalver ringrtc-$_ringrtcver webrtc-$_webrtcver node-sqlcipher-$_sqlcipherver; do
		mv "$srcdir"/$i "$builddir"/${i%-*}
	done
	default_prepare

	cd "$builddir"/Signal-Desktop

	# puts node modules in the root node_modules instead of under .pnpm
	echo "node-linker=hoisted" >> .npmrc

	msg "Installing signal-desktop JS dependencies"
	pnpm install --ignore-scripts

	# remove shipped fonts for system-provided (part 1)
	rm -rf fonts/

	(
		cd "$builddir"/webrtc

		local use_system="
			brotli
			crc32c
			dav1d
			ffmpeg
			flatbuffers
			fontconfig
			freetype
			harfbuzz-ng
			highway
			icu
			jsoncpp
			libaom
			libdrm
			libjpeg
			libpng
			libsecret
			libvpx
			libwebp
			libxml
			libxslt
			openh264
			opus
			re2
			snappy
			woff2
			zlib
			"
		for _lib in $use_system double_conversion libjpeg_turbo; do
			msg "Removing buildscripts for system provided $_lib"
			find . -type f -path "*{third_party,ringrtc}/$_lib/*" \
				\! -path "*third_party/$_lib/chromium/*" \
				\! -path "*third_party/$_lib/google/*" \
				\! -path './base/third_party/icu/*' \
				\! -path './third_party/libxml/*' \
				\! -path './third_party/re2/*' \
				\! -path './third_party/pdfium/third_party/freetype/include/pstables.h' \
				\! -path './third_party/harfbuzz-ng/utils/hb_scoped.h' \
				\! -path './third_party/crashpad/crashpad/third_party/zlib/zlib_crashpad.h' \
				\! -regex '.*\.\(gn\|gni\|isolate\|py\)' \
				-delete
		done

		msg "Replacing gn files"
		python3 build/linux/unbundle/replace_gn_files.py --system-libraries \
			$use_system

		# zlib depends on base for no reason
		sed -i '/\/\/base/d' ./third_party/zlib/BUILD.gn

		# allow system dependencies in "official builds"
		sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
			tools/generate_shim_headers/generate_shim_headers.py

		mkdir path
		ln -s /usr/bin/python3 path/vpython3
	)

	(
		cd "$builddir"/ringrtc/src/rust

		msg "Installing ringrtc rust dependencies"
		cargo fetch --target="$CTARGET" --locked
	)

	(
		cd "$builddir"/libsignal

		msg "Installing libsignal rust dependencies"
		cargo fetch --target="$CTARGET" --locked
	)

	(
		cd "$builddir"/node-sqlcipher

		# fix target
		sed -i 's/unknown-linux-gnu/alpine-linux-musl/g' deps/extension/extension.gyp

		msg "Installing sqlcipher js dependencies"
		pnpm install --ignore-scripts
	)

	(
		cd "$builddir"/ringrtc/src/node

		msg "Installing ringrtc js dependencies"
		npm ci --ignore-scripts
	)

	(
		cd "$builddir"/libsignal/node

		# fix target
		sed -i 's/unknown-linux-gnu/alpine-linux-musl/g' build_node_bridge.py

		msg "Installing libsignal js dependencies"
		yarn --ignore-scripts --frozen-lockfile
	)
}

build() {
	chromium_arch="$(node -e 'console.log(process.arch)')"

	# required dependency of ringrtc
	(
		cd "$builddir"/webrtc
		export PATH="$PWD/path:$PATH"

		# shellcheck disable=2089
		local webrtc_args="
			rtc_build_examples=false
			rtc_build_tools=false
			rtc_enable_protobuf=false
			rtc_enable_sctp=false
			rtc_include_tests=false
			rtc_include_ilbc=false
			rtc_libvpx_build_vp9=true
			rtc_use_x11=false
			rustc_version=\"yes\"
			rust_bindgen_root=\"/usr\"
			rust_sysroot_absolute=\"/usr\"

			build_with_mozilla=false
			chrome_pgo_phase=0
			clang_use_chrome_plugins=false
			clang_base_path=\"/usr\"
			custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
			is_cfi=false
			is_clang=false
			is_debug=false
			is_official_build=true
			host_toolchain=\"//build/toolchain/linux/unbundle:default\"
			proprietary_codecs=true
			rtc_link_pipewire=true
			rtc_use_pipewire=true
			symbol_level=0
			use_custom_libcxx=false
			use_lld=true
			use_sysroot=false
		"
		mkdir -p "$builddir"/ringrtc/out/release
		msg "Building signal's webrtc"
		# shellcheck disable=2090,2116
		gn gen "$builddir"/ringrtc/out/release --args="$(echo $webrtc_args)"
		ninja -C "$builddir"/ringrtc/out/release signaldeswebrtc
	)

	(
		cd "$builddir"/ringrtc

		msg "Building libringrtc"
		OUTPUT_DIR="$builddir"/ringrtc/out \
			cargo auditable build --features electron --release -p ringrtc

		mkdir -p src/node/build/linux
		cp -fv out/release/libsignaldeswebrtc.so src/node/build/linux/libsignaldeswebrtc.so
		cp -fv target/release/libringrtc.so src/node/build/linux/libringrtc-$chromium_arch.node
	)

	(
		cd "$builddir"/ringrtc/src/node
		msg "Building ringrtc JS glue code"
		npm run build

		msg "Cleaning dev dependencies for ringrtc"
		npm prune --ignore-scripts --omit=dev
	)

	# module on npm intentionally unbuildable: https://github.com/signalapp/libsignal/issues/464#issuecomment-1160665052
	(
		cd "$builddir"/libsignal/node

		msg "Building libsignal"
		npm_config_nodedir=/usr/include/electron/node_headers python3 build_node_bridge.py

		mkdir -p prebuilds/linux-$chromium_arch
		mv build/Release/libsignal_client_linux_$chromium_arch.node prebuilds/linux-$chromium_arch/node.napi.node

		msg "Building libsignal glue code"
		npm run tsc

		msg "Cleaning dev dependencies for libsignal"
		npm prune -ignore-scripts --omit=dev
	)

	(
		cd "$builddir"/node-sqlcipher

		(
			cd deps/extension
			msg "Building sqlcipher-extension"
			cargo auditable build --release --target $CTARGET
		)

		msg "Building sqlcipher"
		node-gyp configure --nodedir=/usr/include/electron/node_headers --build-from-source
		node-gyp build --nodedir=/usr/include/electron/node_headers --build-from-source

		msg "Building sqlcipher glue code"
		pnpm build

		mkdir -p prebuilds/linux-$chromium_arch
		mv build/Release/obj.target/node_sqlcipher.node prebuilds/linux-$chromium_arch/node.napi.node

		msg "Cleaning dev dependencies for sqlcipher"
		pnpm prune --ignore-scripts --prod
	)

	msg "Building signal-desktop"
	cd "$builddir"/Signal-Desktop

	# from package.json postinstall
	pnpm run build:acknowledgments
	rm -rf node_modules/dtrace-provider

	# get esbuild installed (needed for next step)
	pnpm rebuild esbuild

	# build front
	# resets GIT_CEILING_DIRECTORIES as sometimes abuild sets this and breaks get-expire-time
	NODE_ENV=production \
	SIGNAL_ENV=production \
	NODE_OPTIONS=--openssl-legacy-provider \
	GIT_CEILING_DIRECTORIES= \
	pnpm run build:dev

	# purge non-production deps
	pnpm prune --ignore-scripts --prod

	# use our libsignal
	rm -rf node_modules/@signalapp/libsignal-client/
	cp -r "$builddir"/libsignal/node/ node_modules/@signalapp/libsignal-client

	# use our libringrtc
	rm -rf node_modules/@signalapp/ringrtc/
	cp -r "$builddir"/ringrtc/src/node/ node_modules/@signalapp/ringrtc

	# use our sqlcipher
	rm -rf node_modules/@signalapp/sqlcipher/
	cp -r "$builddir"/node-sqlcipher node_modules/@signalapp/sqlcipher

	SIGNAL_ENV=production \
	tasje pack
}

check() {
	cd "$builddir"/Signal-Desktop
	# tests run against downloaded build of electron for glibc, probably can be patched
	pnpm run test
}

package() {
	cd "$builddir"/Signal-Desktop/tasje_out

	install -Dm644 resources/app.asar "$pkgdir"/usr/lib/$pkgname/app.asar
	cp -r resources/app.asar.unpacked "$pkgdir"/usr/lib/$pkgname/app.asar.unpacked
	install -Dm644 signal.desktop "$pkgdir"/usr/share/applications/$pkgname.desktop

	# this should be in /usr/lib/signal-desktop. however, it does not simply work and I stopped to care
	install -Dm755 "$builddir"/ringrtc/out/release/libsignaldeswebrtc.so "$pkgdir"/usr/lib/libsignaldeswebrtc.so

	install -Dm755 "$srcdir"/signal-desktop.sh "$pkgdir"/usr/bin/signal-desktop

	while read -r size; do
		install -Dm644 icons/$size.png "$pkgdir"/usr/share/icons/hicolor/$size/apps/$pkgname.png
	done < icons/size-list
}

sha512sums="
c847d3679df77ca137b4c3345b3b941a08639677efcd5eeea6613572fa90b8ad1b8d1d53e077902d4f47c05c480c408787024906d6917dcbf4a840838bf6d79d  Signal-Desktop-7.76.0.tar.gz
43271a64f65a4cf0e7855fb84476ff811ef248665cb74fdaa9ce12b02d2039abdf8fca28554e7e884eabaa9bdd77e8f5383e6354e589436671675ddab7194d81  libsignal-0.83.0.tar.gz
ba4a1850bd096470a6370a0bf730550f64df4a2349cacca3b4864ef1a3a04713dd200307b9ad7ba47425322573148d6bd2ce85c11c2a49232d41e739ef5e788d  ringrtc-2.59.0.tar.gz
79dd21548329b4ee409fa73b013c18ed4e85038aeef7a4cfe196fd6b5113279da8ad287a259fa6a6b546b52a5a6dd6ae2cb1050007043d25f76d7917dbbbc02d  node-sqlcipher-2.4.4.tar.gz
06ffb4cdb82f818cc419d42ff2de03977d7e94c5f3eb8ac8a401bcb52ec38fa988c5d757f4bd79e5d9968fa83754fc9046180c950961c90a59eeb6130bf5552f  webrtc-7339c.tar.zst
8d2d2d82c8546c2dd1fef161b61df79918f8c22235a56a46adb375a0beb4acef12c5fe53e67242a4be97f77adc522ff79b47949c352956c742a70d50f4179f7f  libsignal-auditable.patch
7ee747c8aaa9d6e9149fe0a031e3d4cc9e9c08f22c42076bd05e2acb86952f8170032613d13a53716010edfa3f26ad97b530e82460318eb46a42e28cf5faeb9d  signal-use-system-sqlcipher.patch
ef3622da416a5bd2d4bea4f2a4fbb21a985f660d4acc17bbe66ce51ac1180ab92c0c843a5414ff56ea1deda87c2b0f611a299ca8ebe4d6a24df53626b36ceea8  signal-disable-updates.patch
853de84d636f730694f17bcec63463fa7bfbdd0a7f7a64618a8fc6bc523ce1a9854b4c651753735af735c18101295d3efbe54f83ae0bccbed83c8c1fee3e7049  signal-update-links.patch
882d6889b23a3ebc6449c8b6acec8c3853674a7e94f066d65b57bab674ba8c11d582ba2c760825cb67b9202716e6d8b7123001d1e9f9229e49a0b77e9d978265  signal-show-window-please.patch
3dd3bf2f6925e2672a20ef56bbac519099d54e912e5a434a0649ea152db5039dbe1bbade3430b485ae9a6085d747dd88602d4efc5198d5a4dbf1b8359de11f94  signal-rollback-locale-changes.patch
961568777b86f8fbcc73360252123686c9d1e16b2650f23d8afbc6d7580d53024f81b62e9e9cbdcd0031b5cf99854bd47c6dd4580197f2b27b8b4cbb51c6c9c9  signal-do-not-package-sqlcipher-deps.patch
d8cafd4ae1f7438417f5c414d68a175c3d24b66a14b9f3b8ca9c9acae2b2eaa68985ee81c1df7d754a206ff1c9b02929803440fb0734db38b6ac9ab3e34205b0  signal-do-not-package-desktop-entry.patch
02a648bb8541a39c75fec2db39f024a27976afca41908eefa2fe1f2e30b05b5d59f980ccc930021c0b0c09ba8b0cbcae071e9f0dd530543c667adbc4272af552  ringrtc-webrtc-renamed.patch
19d2e07bdc0b160ec542fcb0a3d94ae1e37dcb1b3455e57b278cf074f8aac625341b47f4f06a1f7eb5a197cb0f11754de8785ffd10876852972cbfafdc2615db  ringrtc-use-sh.patch
a9374040dcbc9203c8a3b4ad1cf97d58805cd4755f4f585a988b113697ea97d5900ad68f6a30aa0621f34ab54ae98984a8ce228a2d08186ee1bf3384abf3f364  webrtc-shared-libs.patch
8ba740f0552872ddf383545a6bb99bf7bcdd2610cee51c6e69dc667893006facd5d72f62274e25c1a58e1a58c8e8b0b5303b648e4c74a71925639cc9691c72c4  webrtc-compiler.patch
d44f62e4ccf2d9094d6ed217b24fa2cde276c7f64f4d6fd26e84dfc021ea667abcb21f9e4666cfd0d88d6ee0a6b1a20b6cc68c8720462711e3b5451e263f6c4a  webrtc-use-only-payloadtypesuggester-for-pt-assignement.patch
ace87a2be03c6965012a87a10918c5923b10d5e74a7169c1e1384c15b34a367d0c47e806764c368cc30dad01a3dce54b50587abea9831130178db3806619abc8  webrtc-fix-declaration-that-change-meaning-inside-class.patch
d17ecd89e867b24a21144d267e1bf7d09e3898018a0f9fcd87084b9de8091bc56f904a1cabdc487a8e46ab509c11ddd363c574d75d85a79e3c4d9424a13b2093  webrtc-rtcbase-platform-thread-type-do-not-include-linux-prctl-header.patch
8e1de53ec1608fa05972af605213e8423b8f88cfd8d6a1989bdcaf77ed1420871c39efa15c56ffeccb6ff86677acc5bc436020f3554bee4f94930c7d9f4e16b6  signal-desktop.sh
"
