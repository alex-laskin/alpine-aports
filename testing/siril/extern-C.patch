Patch-Source: https://gitlab.com/free-astro/siril/-/commit/9186b0c0110aa332a99d578664e69cd26cae953b

--- a/src/filters/da3d/DA3D.cpp
+++ b/src/filters/da3d/DA3D.cpp
@@ -15,10 +15,10 @@
 #include "WeightMap.hpp"
 #include "Utils.hpp"
 #include "DftPatch.hpp"
-extern "C" {
+
 #include "core/processing.h"
 #include "gui/progress_and_log.h"
-}
+
 
 #ifdef _OPENMP
 #include <omp.h>
--- a/src/filters/nlbayes/NlBayes.cpp
+++ b/src/filters/nlbayes/NlBayes.cpp
@@ -27,11 +27,9 @@
 #include "LibMatrix.h"
 #include "LibImages.h"
 #include "Utilities.h"
-extern "C" {
 #include "algos/anscombe.h"
 #include "core/processing.h"
 #include "gui/progress_and_log.h"
-}
 
 #ifdef _OPENMP
 #include <omp.h>
--- a/src/opencv/opencv.h
+++ b/src/opencv/opencv.h
@@ -5,10 +5,6 @@
 #  include <config.h>
 #endif
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #include <stdint.h>
 #include "registration/registration.h"
 #include "registration/distorsion.h"
@@ -18,6 +14,10 @@ extern "C" {
 #include "io/sequence.h"
 #include "io/image_format_fits.h"
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 WORD *fits_to_bgrbgr_ushort(fits *image);
 float *fits_to_bgrbgr_float(fits *image);
 
--- a/src/core/processing.h
+++ b/src/core/processing.h
@@ -39,6 +39,10 @@
  * image processing.
  */
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /** Main structure of the generic function */
 struct generic_seq_args {
 	/** sequence that will be processed */
@@ -184,4 +188,8 @@ gpointer generic_sequence_metadata_worker(gpointer args);
 
 void kill_child_process(gboolean on_exit);
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif
--- a/src/gui/progress_and_log.h
+++ b/src/gui/progress_and_log.h
@@ -4,6 +4,10 @@
 #include <sys/time.h>
 #include <gtk/gtk.h>
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #define PROGRESS_NONE -2.0		// don't update the progress bar value
 #define PROGRESS_PULSATE -1.0		// pulsate the progress bar
 #define PROGRESS_RESET 0.0		// reset the progress bar
@@ -17,4 +21,8 @@ void set_progress_bar_data(const char *text, double percent);
 void set_cursor_waiting(gboolean waiting);
 void set_cursor(const gchar* cursor_name);
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif
