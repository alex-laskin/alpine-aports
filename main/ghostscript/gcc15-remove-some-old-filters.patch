Patch-Source: https://cgit.ghostscript.com/cgi-bin/cgit.cgi/ghostpdl.git/patch/?id=98fba9b54a44c49987612956d95a1916a02c3778
Backported for 10.05.1.
---
From 98fba9b54a44c49987612956d95a1916a02c3778 Mon Sep 17 00:00:00 2001
From: Ken Sharp <Ken.Sharp@artifex.com>
Date: Tue, 25 Feb 2025 15:42:44 +0000
Subject: Remove some old filters used for the PDF in PostScript interpreter

Also remove the code behind these filters:

AESDecode
ArcfourEncode
ArcfourDecode
MD5Encode
SHA256Encode
.EOFDecode
PSStringEncode

And the operators:

check_r6_password
.psstringencode
---
 Resource/Init/gs_init.ps |   6 +-
 psi/int.mak              |  77 +---------------
 psi/msvc.mak             |   4 +-
 psi/winint.mak           |  13 +--
 psi/zfaes.c              |  73 ---------------
 psi/zfarc4.c             | 105 ----------------------
 psi/zfilter.c            |  34 +------
 psi/zfmd5.c              |  43 ---------
 psi/zfsha2.c             |  43 ---------
 psi/zpdf_r6.c            | 227 -----------------------------------------------
 psi/zutf8.c              |  83 -----------------
 psi/zwinutf8.c           |  76 ----------------
 12 files changed, 9 insertions(+), 775 deletions(-)
 delete mode 100644 psi/zfaes.c
 delete mode 100644 psi/zfarc4.c
 delete mode 100644 psi/zfmd5.c
 delete mode 100644 psi/zfsha2.c
 delete mode 100644 psi/zpdf_r6.c
 delete mode 100644 psi/zutf8.c
 delete mode 100644 psi/zwinutf8.c

diff --git a/Resource/Init/gs_init.ps b/Resource/Init/gs_init.ps
index 14a4693f0..63ac07ae8 100644
--- a/Resource/Init/gs_init.ps
+++ b/Resource/Init/gs_init.ps
@@ -2551,8 +2551,8 @@ currentdict /.locksafeglobal .undef
 /UndefinePostScriptFilters {
   [
    /BCPEncode /TBCPEncode /PNGPredictorEncode /PNGPredictorDecode /PixelDifferenceDecode /PixelDifferenceEncode
-   /zlibEncode /zlibDecode /PWGDecode /eexecEncode /ArcfourEncode /PSStringEncode /BCPDecode
-   /OLDPDF where {/OLDPDF get not {/SHA256Encode /MD5Encode /AESDecode /JPXDecode /JBIG2Decode /ArcfourDecode /.EOFDecode} if} if
+   /zlibEncode /zlibDecode /PWGDecode /eexecEncode /BCPDecode
+   /OLDPDF where {/OLDPDF get not {/JPXDecode /JBIG2Decode } if} if
   ]
   {filterdict exch undef} forall
 } .forcebind def
@@ -2601,7 +2601,7 @@ currentdict /.locksafeglobal .undef
   /.shfill /.argindex /.bytestring /.namestring /.stringbreak /.stringmatch /.globalvmarray /.globalvmdict /.globalvmpackedarray /.globalvmstring
   /.localvmarray /.localvmdict /.localvmpackedarray /.localvmstring /.systemvmarray /.systemvmdict /.systemvmpackedarray /.systemvmstring /.systemvmfile /.systemvmlibfile
   /.systemvmSFD /.settrapparams /.currentsystemparams /.currentuserparams /.getsystemparam /.getuserparam /.setsystemparams /.setuserparams
-  /.checkpassword /.locale_to_utf8 /.currentglobal /.gcheck /.imagepath /.currentoutputdevice
+  /.checkpassword /.currentglobal /.gcheck /.imagepath /.currentoutputdevice
   /.type /.writecvs /.setSMask /.currentSMask /.needinput /.countexecstack /.execstack
   /filterdict /.cidfonttypes /.colorrenderingtypes
   /.formtypes /.halftonetypes /.imagetypes /.imagemasktypes
diff --git a/psi/int.mak b/psi/int.mak
index 8a71d1d8a..f88f43893 100644
--- a/psi/int.mak
+++ b/psi/int.mak
@@ -1,4 +1,4 @@
-# Copyright (C) 2001-2024 Artifex Software, Inc.
+# Copyright (C) 2001-2025 Artifex Software, Inc.
 # All Rights Reserved.
 #
 # This software is provided AS-IS with no warranty, either express or
@@ -1148,57 +1148,6 @@ $(PSOBJ)zfilter2.$(OBJ) : $(PSSRC)zfilter2.c $(OP) $(memory__h)\
  $(INT_MAK) $(MAKEDIRS)
 	$(PSCC) $(PSO_)zfilter2.$(OBJ) $(C_) $(PSSRC)zfilter2.c
 
-# MD5 digest filter
-fmd5_=$(PSOBJ)zfmd5.$(OBJ)
-$(PSD)fmd5.dev : $(ECHOGS_XE) $(fmd5_) $(GLD)smd5.dev\
- $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)fmd5 $(fmd5_)
-	$(ADDMOD) $(PSD)fmd5 -include $(GLD)smd5
-	$(ADDMOD) $(PSD)fmd5 -oper zfmd5
-
-$(PSOBJ)zfmd5.$(OBJ) : $(PSSRC)zfmd5.c $(OP) $(memory__h)\
- $(gsstruct_h) $(ialloc_h) $(ifilter_h)\
- $(smd5_h) $(stream_h) $(strimpl_h) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zfmd5.$(OBJ) $(C_) $(PSSRC)zfmd5.c
-
-# SHA-256 digest filter
-fsha2_=$(PSOBJ)zfsha2.$(OBJ)
-$(PSD)fsha2.dev : $(ECHOGS_XE) $(fsha2_) $(GLD)ssha2.dev\
- $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)fsha2 $(fsha2_)
-	$(ADDMOD) $(PSD)fsha2 -include $(GLD)ssha2
-	$(ADDMOD) $(PSD)fsha2 -oper zfsha2
-
-$(PSOBJ)zfsha2.$(OBJ) : $(PSSRC)zfsha2.c $(OP) $(memory__h)\
- $(ghost_h) $(oper_h) $(gsstruct_h) $(stream_h) $(strimpl_h)\
- $(ialloc_h) $(ifilter_h) $(ssha2_h) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zfsha2.$(OBJ) $(C_) $(PSSRC)zfsha2.c
-
-# Arcfour cipher filter
-farc4_=$(PSOBJ)zfarc4.$(OBJ)
-$(PSD)farc4.dev : $(ECHOGS_XE) $(farc4_) $(GLD)sarc4.dev\
- $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)farc4 $(farc4_)
-	$(ADDMOD) $(PSD)farc4 -include $(GLD)sarc4
-	$(ADDMOD) $(PSD)farc4 -oper zfarc4
-
-$(PSOBJ)zfarc4.$(OBJ) : $(PSSRC)zfarc4.c $(OP) $(memory__h)\
- $(gsstruct_h) $(ialloc_h) $(idict_h) $(ifilter_h)\
- $(sarc4_h) $(stream_h) $(strimpl_h) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zfarc4.$(OBJ) $(C_) $(PSSRC)zfarc4.c
-
-# AES cipher filter
-faes_=$(PSOBJ)zfaes.$(OBJ)
-$(PSD)faes.dev : $(ECHOGS_XE) $(faes_) $(GLD)saes.dev\
- $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)faes $(faes_)
-	$(ADDMOD) $(PSD)faes -include $(GLD)saes
-	$(ADDMOD) $(PSD)faes -oper zfaes
-
-$(PSOBJ)zfaes.$(OBJ) : $(PSSRC)zfaes.c $(OP) $(memory__h)\
- $(gsstruct_h) $(ialloc_h) $(idict_h) $(idparam_h) $(ifilter_h)\
- $(saes_h) $(stream_h) $(strimpl_h) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zfaes.$(OBJ) $(C_) $(PSSRC)zfaes.c
 
 # JBIG2 compression filter
 # this can be turned on and off with a FEATURE_DEV
@@ -1746,17 +1695,13 @@ $(PSOBJ)zform.$(OBJ) : $(PSSRC)zform.c $(OP) $(ghost_h) $(oper_h)\
 $(PSD)pdf.dev : $(ECHOGS_XE)\
  $(GLD)dps2lib.dev $(PSD)dps2read.dev\
  $(PSD)pdffonts.dev $(PSD)psl3.dev $(PSD)pdfread.dev\
- $(PSD)fmd5.dev $(PSD)fsha2.dev $(PSD)farc4.dev $(PSD)faes.dev\
  $(PSD)type2.dev $(PSD)pdfops.dev\
- $(PSD)pdf_r6.dev $(INT_MAK) $(MAKEDIRS)
+ $(INT_MAK) $(MAKEDIRS)
 	$(SETMOD) $(PSD)pdf -include $(PSD)psbase $(GLD)dps2lib
 	$(ADDMOD) $(PSD)pdf -include $(PSD)dps2read $(PSD)pdffonts $(PSD)psl3
 	$(ADDMOD) $(PSD)pdf -include $(GLD)psl2lib $(PSD)pdfread
-	$(ADDMOD) $(PSD)pdf -include $(PSD)fmd5 $(PSD)fsha2
-	$(ADDMOD) $(PSD)pdf -include $(PSD)farc4 $(PSD)faes.dev
 	$(ADDMOD) $(PSD)pdf -include $(PSD)type2
 	$(ADDMOD) $(PSD)pdf -include $(PSD)pdfops
-	$(ADDMOD) $(PSD)pdf -include $(PSD)pdf_r6
 	$(ADDMOD) $(PSD)pdf -include $(PSD)cff
 	$(ADDMOD) $(PSD)pdf -include $(PSD)ttfont
 	$(ADDMOD) $(PSD)pdf -functiontype 4
@@ -1812,24 +1757,6 @@ $(PSOBJ)zpdfops.$(OBJ) : $(PSSRC)zpdfops.c $(OP) $(MAKEFILE)\
  $(igc_h) $(string__h) $(store_h) $(iminst_h) $(idstack_h) $(INT_MAK) $(MAKEDIRS)
 	$(PSCC) $(PSO_)zpdfops.$(OBJ) $(C_) $(PSSRC)zpdfops.c
 
-zutf8_=$(PSOBJ)zutf8.$(OBJ)
-$(PSD)utf8.dev : $(ECHOGS_XE) $(zutf8_) $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)utf8 $(zutf8_)
-	$(ADDMOD) $(PSD)utf8 -oper zutf8
-
-$(PSOBJ)zutf8.$(OBJ) : $(PSSRC)zutf8.c $(OP)\
- $(ghost_h) $(oper_h) $(iutil_h) $(ialloc_h) $(malloc__h) $(string__h)\
- $(store_h) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zutf8.$(OBJ) $(C_) $(PSSRC)zutf8.c
-
-zpdf_r6_=$(PSOBJ)zpdf_r6.$(OBJ)
-$(PSD)pdf_r6.dev : $(ECHOGS_XE) $(zpdf_r6_) $(INT_MAK) $(MAKEDIRS)
-	$(SETMOD) $(PSD)pdf_r6 $(zpdf_r6_)
-	$(ADDMOD) $(PSD)pdf_r6 -oper zpdf_r6
-
-$(PSOBJ)zpdf_r6.$(OBJ) : $(PSSRC)zpdf_r6.c $(OP) $(MAKEFILE) $(INT_MAK) $(MAKEDIRS)
-	$(PSCC) $(PSO_)zpdf_r6.$(OBJ) $(C_) $(PSSRC)zpdf_r6.c
-
 # ================ Dependencies for auxiliary programs ================ #
 
 # ============================= Main program ============================== #
diff --git a/psi/msvc.mak b/psi/msvc.mak
index 1b91b7cb3..3979ce510 100644
--- a/psi/msvc.mak
+++ b/psi/msvc.mak
@@ -1,4 +1,4 @@
-# Copyright (C) 2001-2024 Artifex Software, Inc.
+# Copyright (C) 2001-2025 Artifex Software, Inc.
 # All Rights Reserved.
 #
 # This software is provided AS-IS with no warranty, either express or
@@ -1001,7 +1001,7 @@ SBRFLAGS=/FR$(SBRDIR)\$(NUL)
 
 # if it's included, $(PSD)gs_pdfwr.dev should always be one of the last in the list
 PSI_FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(GPDF_DEV) $(PSD)epsf.dev $(PSD)ttfont.dev \
-                 $(PSD)jbig2.dev $(PSD)jpx.dev $(PSD)fapi_ps.dev $(GLD)winutf8.dev $(PSD)gs_pdfwr.dev
+       $(PSD)jbig2.dev $(PSD)jpx.dev $(PSD)fapi_ps.dev $(PSD)gs_pdfwr.dev
 
 
 PCL_FEATURE_DEVS=$(PLOBJDIR)/pl.dev $(PLOBJDIR)/pjl.dev $(PXLOBJDIR)/pxl.dev $(PCL5OBJDIR)/pcl5c.dev \
diff --git a/psi/zfaes.c b/psi/zfaes.c
deleted file mode 100644
index 9369ba980..000000000
--- a/psi/zfaes.c
+++ /dev/null
@@ -1,73 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-
-/* this is the ps interpreter interface to the AES cipher filter
-   used in PDF encryption. We currently provide only decode support. */
-
-#include "memory_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "gsstruct.h"
-#include "ialloc.h"
-#include "idict.h"
-#include "idparam.h"
-#include "stream.h"
-#include "strimpl.h"
-#include "ifilter.h"
-#include "saes.h"
-
-/* <source> <dict> aes/filter <file> */
-
-static int
-z_aes_d(i_ctx_t * i_ctx_p)
-{
-    os_ptr op = osp;		/* i_ctx_p->op_stack.stack.p defined in osstack.h */
-    ref *sop = NULL;
-    stream_aes_state state;
-    int use_padding;
-
-    check_op(2);
-    /* extract the key from the parameter dictionary */
-    check_type(*op, t_dictionary);
-    check_dict_read(*op);
-    if (dict_find_string(op, "Key", &sop) <= 0)
-        return_error(gs_error_rangecheck);
-    check_type(*sop, t_string);
-    s_aes_set_key(&state, sop->value.const_bytes, r_size(sop));
-
-    /* extract the padding flag, which defaults to true for compatibility */
-    if (dict_bool_param(op, "Padding", 1, &use_padding) < 0)
-        return_error(gs_error_rangecheck);
-
-    s_aes_set_padding(&state, use_padding);
-
-    /* we pass npop=0, since we've no arguments left to consume */
-    /* FIXME: passing 0 instead of the usual rspace(sop) will allocate
-       storage for filter state from the same memory pool as the stream
-       it's coding. this caused no trouble when we were the arcfour cipher
-       and maintained no pointers. */
-    return filter_read(i_ctx_p, 0, &s_aes_template,
-                       (stream_state *) & state, 0);
-}
-
-/* Match the above routine to its postscript filter name.
-   This is how our static routines get called externally. */
-const op_def zfaes_op_defs[] = {
-    op_def_begin_filter(),
-    {"2AESDecode", z_aes_d},
-    op_def_end(0)
-};
diff --git a/psi/zfarc4.c b/psi/zfarc4.c
deleted file mode 100644
index 1cc875844..000000000
--- a/psi/zfarc4.c
+++ /dev/null
@@ -1,105 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-
-/* this is the ps interpreter interface to the arcfour cipher filter
-   used in PDF encryption. We provide both Decode and Encode filters;
-   the cipher is symmetric, so the call to the underlying routines is
-   identical between the two filters */
-
-#include "memory_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "gsstruct.h"
-#include "ialloc.h"
-#include "idict.h"
-#include "stream.h"
-#include "strimpl.h"
-#include "ifilter.h"
-#include "sarc4.h"
-
-/* <source> <dict> arcfour/filter <file> */
-
-static int
-z_arcfour_d(i_ctx_t * i_ctx_p)
-{
-    os_ptr op = osp;		/* i_ctx_p->op_stack.stack.p defined in osstack.h */
-    ref *sop = NULL;
-    stream_arcfour_state state;
-    int code;
-
-    state.x = state.y = 0;
-
-    check_op(2);
-    /* extract the key from the parameter dictionary */
-    check_type(*op, t_dictionary);
-    check_dict_read(*op);
-    if (dict_find_string(op, "Key", &sop) <= 0)
-        return_error(gs_error_rangecheck);
-    if (!r_has_type(sop, t_string))
-    	return_error(gs_error_typecheck);
-
-    code = s_arcfour_set_key(&state, sop->value.const_bytes, r_size(sop)); /* lgtm [cpp/weak-cryptographic-algorithm] */
-    if (code < 0)
-        return code;
-
-    /* we pass npop=0, since we've no arguments left to consume */
-    /* we pass 0 instead of the usual rspace(sop) will allocate storage for
-       filter state from the same memory pool as the stream it's coding. this
-       causes no trouble because we maintain no pointers */
-    return filter_read(i_ctx_p, 0, &s_arcfour_template,
-                       (stream_state *) & state, 0);
-}
-
-/* encode version of the filter */
-static int
-z_arcfour_e(i_ctx_t * i_ctx_p)
-{
-    os_ptr op = osp;		/* i_ctx_p->op_stack.stack.p defined in osstack.h */
-    ref *sop = NULL;
-    stream_arcfour_state state;
-    int code;
-
-    state.x = state.y = 0;
-
-    check_op(2);
-    /* extract the key from the parameter dictionary */
-    check_type(*op, t_dictionary);
-    check_dict_read(*op);
-    if (dict_find_string(op, "Key", &sop) <= 0)
-        return_error(gs_error_rangecheck);
-    if (!r_has_type(sop, t_string))
-    	return_error(gs_error_typecheck);
-
-    if ((code = s_arcfour_set_key(&state, sop->value.const_bytes, r_size(sop))) < 0)
-        return code;
-
-    /* we pass npop=0, since we've no arguments left to consume */
-    /* we pass 0 instead of the usual rspace(sop) will allocate storage for
-       filter state from the same memory pool as the stream it's coding. this
-       causes no trouble because we maintain no pointers */
-    return filter_write(i_ctx_p, 0, &s_arcfour_template,
-                        (stream_state *) & state, 0);
-}
-
-/* Match the above routines to their postscript filter names.
-   This is how our static routines get called externally. */
-const op_def zfarc4_op_defs[] = {
-    op_def_begin_filter(),
-    {"2ArcfourDecode", z_arcfour_d},
-    {"2ArcfourEncode", z_arcfour_e},
-    op_def_end(0)
-};
diff --git a/psi/zfilter.c b/psi/zfilter.c
index 450dae14c..15b15330b 100644
--- a/psi/zfilter.c
+++ b/psi/zfilter.c
@@ -1,4 +1,4 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
+/* Copyright (C) 2001-2025 Artifex Software, Inc.
    All Rights Reserved.
 
    This software is provided AS-IS with no warranty, either express or
@@ -73,14 +73,6 @@ zPFBD(i_ctx_t *i_ctx_p)
     return filter_read(i_ctx_p, 1, &s_PFBD_template, (stream_state *)&state, 0);
 }
 
-/* <target> PSStringEncode/filter <file> */
-/* <target> <dict> PSStringEncode/filter <file> */
-static int
-zPSSE(i_ctx_t *i_ctx_p)
-{
-    return filter_write_simple(i_ctx_p, &s_PSSE_template);
-}
-
 /* ------ RunLength filters ------ */
 
 /* Common setup for RLE and RLD filters. */
@@ -397,27 +389,6 @@ static const stream_template s_Null1D_template = {
     &st_stream_state, NULL, s_Null1D_process, 1, 1
 };
 
-/* A utility filter that returns an immediate EOF without consuming */
-/* any data from its source. Used by PDF interpreter for unknown    */
-/* filter types.                                                    */
-static int
-s_EOFD_process(stream_state * st, stream_cursor_read * pr,
-                 stream_cursor_write * pw, bool last)
-{
-    return EOFC;
-}
-static const stream_template s_EOFD_template = {
-    &st_stream_state, NULL, s_EOFD_process, 1, 1
-};
-
-/* <target> /.EOFDecode filter <file> */
-/* <target> <dict> /.EOFDecode filter <file> */
-static int
-zEOFD(i_ctx_t *i_ctx_p)
-{
-    return filter_read_simple(i_ctx_p, &s_EOFD_template);
-}
-
 /* Ensure a minimum buffer size for a filter. */
 /* This may require creating an intermediate stream. */
 static int
@@ -491,14 +462,12 @@ filter_mark_strm_temp(const ref * fop, int is_temp)
 const op_def zfilter_op_defs[] = {
                 /* We enter PSStringEncode and SubFileDecode (only) */
                 /* as separate operators. */
-    {"1.psstringencode", zPSSE},
     {"2.subfiledecode", zSFD},
     op_def_begin_filter(),
     {"1ASCIIHexEncode", zAXE},
     {"1ASCIIHexDecode", zAXD},
     {"1NullEncode", zNullE},
     {"2PFBDecode", zPFBD},
-    {"1PSStringEncode", zPSSE},
     {"2RunLengthEncode", zRLE},
     {"1RunLengthDecode", zRLD},
     {"1PWGDecode", zPWGD},
@@ -506,6 +475,5 @@ const op_def zfilter_op_defs[] = {
     {"1URFDecode", zURFD},
 #endif
     {"3SubFileDecode", zSFD},
-    {"1.EOFDecode", zEOFD},
     op_def_end(0)
 };
diff --git a/psi/zfmd5.c b/psi/zfmd5.c
deleted file mode 100644
index 27749da55..000000000
--- a/psi/zfmd5.c
+++ /dev/null
@@ -1,43 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-/* MD5Encode filter creation */
-#include "memory_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "gsstruct.h"
-#include "ialloc.h"
-#include "stream.h"
-#include "strimpl.h"
-#include "smd5.h"
-#include "ifilter.h"
-
-/* <source> MD5Encode/filter <file> */
-/* <source> <dict> MD5Encode/filter <file> */
-static int
-zMD5E(i_ctx_t *i_ctx_p)
-{
-    return filter_write_simple(i_ctx_p, &s_MD5E_template);
-}
-
-/* ------ Initialization procedure ------ */
-
-const op_def zfmd5_op_defs[] =
-{
-    op_def_begin_filter(),
-    {"1MD5Encode", zMD5E},
-    op_def_end(0)
-};
diff --git a/psi/zfsha2.c b/psi/zfsha2.c
deleted file mode 100644
index f621711c0..000000000
--- a/psi/zfsha2.c
+++ /dev/null
@@ -1,43 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-/* SHA256Encode filter creation */
-#include "memory_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "gsstruct.h"
-#include "stream.h"
-#include "strimpl.h"
-#include "ialloc.h"
-#include "ifilter.h"
-#include "ssha2.h"
-
-/* <source> SHA256Encode/filter <file> */
-/* <source> <dict> SHA256Encode/filter <file> */
-static int
-zSHA256E(i_ctx_t *i_ctx_p)
-{
-    return filter_write_simple(i_ctx_p, &s_SHA256E_template);
-}
-
-/* ------ Initialization procedure ------ */
-
-const op_def zfsha2_op_defs[] =
-{
-    op_def_begin_filter(),
-    {"1SHA256Encode", zSHA256E},
-    op_def_end(0)
-};
diff --git a/psi/zpdf_r6.c b/psi/zpdf_r6.c
deleted file mode 100644
index 13404a84b..000000000
--- a/psi/zpdf_r6.c
+++ /dev/null
@@ -1,227 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-#include "memory_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "dstack.h"	/* for systemdict */
-#include "estack.h"
-#include "ialloc.h"
-#include "iutil.h"
-#include "idict.h"
-#include "iname.h"
-#include "string_.h"	/* memcmp() */
-#include "store.h"
-#include "aes.h"
-#include "sha2.h"
-
-/* Implementation of the PDF security handler revision6 (PDF 1.7 ExtensionLevel 8 algorithm)
- *
- * Adobe/ISO has not yet released the details, so the algorithm reference is:
- * http://esec-lab.sogeti.com/post/The-undocumented-password-validation-algorithm-of-Adobe-Reader-X
- *
- * The code below is the same as (and copied from) the MuPDF implementation.
- */
-
-static void
-pdf_compute_hardened_hash_r6(unsigned char *password, int pwlen, unsigned char salt[16], unsigned char *ownerkey, unsigned char hash[32])
-{
-	unsigned char data[(128 + 64 + 48) * 64];
-	unsigned char block[64];
-	int block_size = 32;
-	int data_len = 0;
-	int i, j, sum;
-
-    SHA256_CTX sha256;
-    SHA384_CTX sha384;
-    SHA512_CTX sha512;
-    aes_context aes;
-
-    pSHA256_Init(&sha256);
-    pSHA256_Update(&sha256, password, pwlen);
-    pSHA256_Update(&sha256, salt, 8);
-    if (ownerkey)
-        pSHA256_Update(&sha256, ownerkey, 48);
-    pSHA256_Final((uint8_t *)block, &sha256);
-
-	for (i = 0; i < 64 || i < data[data_len * 64 - 1] + 32; i++)
-	{
-		/* Step 2: repeat password and data block 64 times */
-		memcpy(data, password, pwlen);
-		memcpy(data + pwlen, block, block_size);
-		if (ownerkey)
-			memcpy(data + pwlen + block_size, ownerkey, 48);
-		data_len = pwlen + block_size + (ownerkey ? 48 : 0);
-		for (j = 1; j < 64; j++)
-			memcpy(data + j * data_len, data, data_len);
-
-		/* Step 3: encrypt data using data block as key and iv */
-		aes_setkey_enc(&aes, block, 128);
-		aes_crypt_cbc(&aes, AES_ENCRYPT, data_len * 64, block + 16, data, data);
-
-		/* Step 4: determine SHA-2 hash size for this round */
-		for (j = 0, sum = 0; j < 16; j++)
-			sum += data[j];
-
-		/* Step 5: calculate data block for next round */
-		block_size = 32 + (sum % 3) * 16;
-		switch (block_size)
-		{
-        case 32:
-            pSHA256_Init(&sha256);
-            pSHA256_Update(&sha256, data, data_len * 64);
-            pSHA256_Final((uint8_t *)block, &sha256);
-            break;
-        case 48:
-            pSHA384_Init(&sha384);
-            pSHA384_Update(&sha384, data, data_len * 64);
-            pSHA384_Final((uint8_t *)block, &sha384);
-            break;
-        case 64:
-            pSHA512_Init(&sha512);
-            pSHA512_Update(&sha512, data, data_len * 64);
-            pSHA512_Final((uint8_t *)block, &sha512);
-            break;
-		}
-	}
-
-	memset(data, 0, sizeof(data));
-	memcpy(hash, block, 32);
-}
-
-static void
-pdf_compute_encryption_key_r6(unsigned char *password, int pwlen, unsigned char *O, unsigned char *OE, unsigned char *U, unsigned char *UE, int ownerkey, unsigned char *validationkey, unsigned char *output)
-{
-	unsigned char hash[32];
-	unsigned char iv[16];
-    aes_context aes;
-
-	if (pwlen > 127)
-		pwlen = 127;
-
-	pdf_compute_hardened_hash_r6(password, pwlen,
-		(ownerkey ? O : U) + 32,
-		ownerkey ? U : NULL, validationkey);
-	pdf_compute_hardened_hash_r6(password, pwlen,
-        (ownerkey ? O : U) + 40,
-        (ownerkey ? U : NULL), hash);
-
-	memset(iv, 0, sizeof(iv));
-    aes_setkey_dec(&aes, hash, 256);
-	aes_crypt_cbc(&aes, AES_DECRYPT, 32, iv,
-		ownerkey ? OE : UE, output);
-}
-
-/* (password) <encryption dict> check_r6_password (key) true|false */
-static int
-zcheck_r6_password(i_ctx_t * i_ctx_p)
-{
-    os_ptr  op = osp;
-    ref *CryptDict, *Oref, *OEref, *Uref, *UEref, *Pref;
-    int code, PWlen;
-	unsigned char validation[32];
-	unsigned char output[32];
-    ref stref;
-    byte *body;
-
-    check_op(2);
-
-    CryptDict = op--;
-    Pref = op;
-    if (!r_has_type(CryptDict, t_dictionary))
-        return_error(gs_error_typecheck);
-    if (!r_has_type(Pref, t_string))
-        return_error(gs_error_typecheck);
-
-    code = dict_find_string(CryptDict, "O", &Oref);
-    if (code < 0)
-        return code;
-    if (code == 0)
-        return_error(gs_error_undefined);
-    if (!r_has_type(Oref, t_string))
-      return_error(gs_error_typecheck);
-    if (r_size(Oref) < 48)
-        return_error(gs_error_invalidaccess);
-
-    code = dict_find_string(CryptDict, "OE", &OEref);
-    if (code < 0)
-        return code;
-    if (code == 0)
-        return_error(gs_error_undefined);
-    if (!r_has_type(OEref, t_string))
-      return_error(gs_error_typecheck);
-    if (r_size(OEref) < 32)
-        return_error(gs_error_invalidaccess);
-
-    code = dict_find_string(CryptDict, "U", &Uref);
-    if (code < 0)
-        return code;
-    if (code == 0)
-        return_error(gs_error_undefined);
-    if (!r_has_type(Uref, t_string))
-      return_error(gs_error_typecheck);
-    if (r_size(Uref) < 48)
-        return_error(gs_error_invalidaccess);
-
-    code = dict_find_string(CryptDict, "UE", &UEref);
-    if (code < 0)
-        return code;
-    if (code == 0)
-        return_error(gs_error_undefined);
-    if (!r_has_type(UEref, t_string))
-      return_error(gs_error_typecheck);
-    if (r_size(UEref) < 32)
-        return_error(gs_error_invalidaccess);
-
-    ref_stack_pop(&o_stack, 2);
-    op = osp;
-
-    PWlen = r_size(Pref);
-
-    /* First, try the password as the user password */
-    pdf_compute_encryption_key_r6((unsigned char *)Pref->value.const_bytes, PWlen, (unsigned char *)Oref->value.const_bytes,
-        (unsigned char *)OEref->value.const_bytes, (unsigned char *)Uref->value.const_bytes, (unsigned char *)UEref->value.const_bytes, 0, validation, output);
-
-    if (memcmp(validation, Uref->value.const_bytes, 32) != 0){
-        /* It wasn't the user password, maybe its the owner password */
-        pdf_compute_encryption_key_r6((unsigned char *)Pref->value.const_bytes, PWlen, (unsigned char *)Oref->value.const_bytes,
-            (unsigned char *)OEref->value.const_bytes, (unsigned char *)Uref->value.const_bytes, (unsigned char *)UEref->value.const_bytes, 1, validation, output);
-
-        if (memcmp(validation, Oref->value.const_bytes, 32) != 0){
-            /* Doesn't seem to be a valid password.... */
-            push(1);
-            make_bool(op, 0);
-            return 0;
-        }
-    }
-
-    body = ialloc_string(32, "r6 encryption key");
-    if (body == 0)
-        return_error(gs_error_VMerror);
-    push(1);
-    memcpy(body, output, 32);
-    make_string(&stref, a_all | icurrent_space, 32, body);
-    ref_assign(op, &stref);
-    push(1);
-    make_bool(op, 1);
-
-    return 0;
-}
-
-const op_def zpdf_r6_op_defs[] =
-{
-    { "2check_r6_password", zcheck_r6_password },
-    op_def_end(0)
-};
diff --git a/psi/zutf8.c b/psi/zutf8.c
deleted file mode 100644
index 69c3dc5a3..000000000
--- a/psi/zutf8.c
+++ /dev/null
@@ -1,83 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-/* The .locale_to_utf8 operator, for converting text from the locale
- * charset to UTF-8.  This code is not used on Windows; there's a
- * separate Windows implementation in zwinutf8.c. */
-
-#include "ghost.h"
-#include "oper.h"
-#include "iutil.h"
-#include "ialloc.h"
-#include "malloc_.h"
-#include "errno_.h"
-#include "string_.h"
-#include "store.h"
-#include <stringprep.h>
-
-/* Convert a string from the current locale's character set to UTF-8.
- * <string> .locale_to_utf8 <string> */
-static int
-zlocale_to_utf8(i_ctx_t *i_ctx_p)
-{
-    os_ptr op = osp;
-    char *input;
-    char *output;
-    int code;
-
-    check_op(1);
-    check_read_type(*op, t_string);
-    input = ref_to_string(op, imemory, "locale_to_utf8 input");
-    if (input == 0)
-        return_error(gs_error_VMerror);
-
-    output = stringprep_locale_to_utf8(input);
-    ifree_string((byte *)input, r_size(op) + 1, "locale_to_utf8 input");
-    if (output == 0) {
-        /* This function is intended to be used on strings whose
-         * character set is unknown, so it's not an error if the
-         * input contains invalid characters.  Just return the input
-         * string unchanged.
-         *
-         * Sadly, EINVAL from stringprep_locale_to_utf8 can mean
-         * either an invalid character set conversion (which we care
-         * about), or an incomplete input string (which we don't).
-         * For now, we ignore EINVAL; the right solution is probably
-         * to not use stringprep_locale_to_utf8, and just call iconv
-         * by hand. */
-        if (errno == EILSEQ || errno == EINVAL)
-            return 0;
-
-        /* Other errors (like ENFILE) are real errors, which we
-         * want to return to the user. */
-        return_error(gs_error_ioerror);
-    }
-
-    code = string_to_ref(output, op, iimemory, "locale_to_utf8 output");
-    free(output);
-    if (code < 0)
-        return code;
-
-    return 0;
-}
-
-/* ------ Initialization procedure ------ */
-
-const op_def zutf8_op_defs[] =
-{
-    {"1.locale_to_utf8", zlocale_to_utf8},
-    op_def_end(0)
-};
diff --git a/psi/zwinutf8.c b/psi/zwinutf8.c
deleted file mode 100644
index a1fdabbc8..000000000
--- a/psi/zwinutf8.c
+++ /dev/null
@@ -1,76 +0,0 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
-   All Rights Reserved.
-
-   This software is provided AS-IS with no warranty, either express or
-   implied.
-
-   This software is distributed under license and may not be copied,
-   modified or distributed except as expressly authorized under the terms
-   of the license contained in the file LICENSE in this distribution.
-
-   Refer to licensing information at http://www.artifex.com or contact
-   Artifex Software, Inc.,  39 Mesa Street, Suite 108A, San Francisco,
-   CA 94129, USA, for further information.
-*/
-
-
-/* The Windows implementation of the .locale_to_utf8 operator.  See
- * also zutf8.c, which is the non-Windows implementation. */
-
-#include "windows_.h"
-#include "ghost.h"
-#include "oper.h"
-#include "iutil.h"
-#include "store.h"
-
-/* Convert a string from the current locale's character set to UTF-8.
- * Unfortunately, "current locale" can mean a few different things on
- * Windows -- we use the default ANSI code page, which does the right
- * thing for command-line arguments (like "-sPDFPassword=foo") and
- * for strings typed as input to gswin32.exe.  It doesn't work for
- * strings typed as input to gswin32c.exe, which are normally in the
- * default OEM code page instead.
- * <string> .locale_to_utf8 <string> */
-static int
-zlocale_to_utf8(i_ctx_t *i_ctx_p)
-{
-#define LOCALE_TO_UTF8_BUFFER_SIZE 1024
-    os_ptr op = osp;
-    char *input;
-    WCHAR wide_buffer[LOCALE_TO_UTF8_BUFFER_SIZE];
-    char utf8_buffer[LOCALE_TO_UTF8_BUFFER_SIZE];
-    int success;
-    int code;
-
-    check_op(1);
-    check_read_type(*op, t_string);
-    input = ref_to_string(op, imemory, "locale_to_utf8 input");
-    if (input == 0)
-        return_error(gs_error_VMerror);
-
-    success = MultiByteToWideChar(CP_ACP, 0, input, -1,
-        wide_buffer, LOCALE_TO_UTF8_BUFFER_SIZE);
-    ifree_string((byte *)input, r_size(op) + 1, "locale_to_utf8 input");
-    if (success == 0)
-        return_error(gs_error_ioerror);
-
-    success = WideCharToMultiByte(CP_UTF8, 0, wide_buffer, -1,
-        utf8_buffer, LOCALE_TO_UTF8_BUFFER_SIZE, NULL, NULL);
-    if (success == 0)
-        return_error(gs_error_ioerror);
-
-    code = string_to_ref(utf8_buffer, op, iimemory, "locale_to_utf8 output");
-    if (code < 0)
-        return code;
-
-    return 0;
-#undef LOCALE_TO_UTF8_BUFFER_SIZE
-}
-
-/* ------ Initialization procedure ------ */
-
-const op_def zwinutf8_op_defs[] =
-{
-    {"1.locale_to_utf8", zlocale_to_utf8},
-    op_def_end(0)
-};
-- 
cgit v1.2.3

