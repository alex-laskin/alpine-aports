Commit ID: b0046536fc9a036db4aee804b74eaa62211bf147
Change ID: klwsyprmsqzlxmolwyqslzuzwtmwvqnm
Author   : Lauri Tirkkonen <lauri@hacktheplanet.fi> (2025-09-05 11:49:18)
Committer: Lauri Tirkkonen <lauri@hacktheplanet.fi> (2025-09-05 12:04:08)

    Backport c23/gcc15 fixes for libstrongswan/processing

    Partial backport of upstream commit d5d2568ff0e88d364dadf50b67bf17050763cf98.

    Upstream patch message follows.

    From d5d2568ff0e88d364dadf50b67bf17050763cf98 Mon Sep 17 00:00:00 2001
    From: Tobias Brunner <tobias@strongswan.org>
    Date: Fri, 21 Feb 2025 16:45:57 +0100
    Subject: [PATCH] callback-job: Replace return_false() in constructors with
     dedicated function

    Besides being clearer, this fixes issues with GCC 15.  The latter uses
    C23 by default, which changes the meaning of function declarations
    without parameters such as

            bool return false();

    Instead of "this function takes an unknown number of arguments", this
    now equals (void), that is, "this function takes no arguments".  So we
    run into incompatible pointer type warnings all over when using such
    functions.  They could be cast to (void*) but this seems the cleaner
    solution for this use case.
    ---

diff --git a/src/libstrongswan/processing/jobs/callback_job.c b/src/libstrongswan/processing/jobs/callback_job.c
index 99464586ca..b466475dda 100644
--- a/src/libstrongswan/processing/jobs/callback_job.c
+++ b/src/libstrongswan/processing/jobs/callback_job.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2009-2012 Tobias Brunner
+ * Copyright (C) 2009-2025 Tobias Brunner
  * Copyright (C) 2007-2011 Martin Willi
  * Copyright (C) 2011 revosec AG
  * HSR Hochschule fuer Technik Rapperswil
@@ -131,3 +131,11 @@
 	return callback_job_create_with_prio(cb, data, cleanup, cancel,
 										 JOB_PRIO_MEDIUM);
 }
+
+/*
+ * Described in header
+ */
+bool callback_job_cancel_thread(void *data)
+{
+	return FALSE;
+}
diff --git a/src/libstrongswan/processing/jobs/callback_job.h b/src/libstrongswan/processing/jobs/callback_job.h
index e5cfdd4051..44a4dcf0e9 100644
--- a/src/libstrongswan/processing/jobs/callback_job.h
+++ b/src/libstrongswan/processing/jobs/callback_job.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2012 Tobias Brunner
+ * Copyright (C) 2012-2025 Tobias Brunner
  * Copyright (C) 2007-2011 Martin Willi
  * Copyright (C) 2011 revosec AG
  * HSR Hochschule fuer Technik Rapperswil
@@ -63,6 +63,15 @@
 typedef bool (*callback_job_cancel_t)(void *data);
 
 /**
+ * Default implementation of callback_job_cancel_t that simply returns FALSE
+ * to force cancellation of the thread by the processor.
+ *
+ * @param data			ignored argument
+ * @return				always returns FALSE
+ */
+bool callback_job_cancel_thread(void *data);
+
+/**
  * Class representing an callback Job.
  *
  * This is a special job which allows a simple callback function to
diff --git a/src/libstrongswan/processing/scheduler.c b/src/libstrongswan/processing/scheduler.c
index 903b097a16..ea0aecff48 100644
--- a/src/libstrongswan/processing/scheduler.c
+++ b/src/libstrongswan/processing/scheduler.c
@@ -328,7 +328,8 @@
 	this->heap = (event_t**)calloc(this->heap_size + 1, sizeof(event_t*));
 
 	job = callback_job_create_with_prio((callback_job_cb_t)schedule, this,
-										NULL, return_false, JOB_PRIO_CRITICAL);
+										NULL, callback_job_cancel_thread,
+										JOB_PRIO_CRITICAL);
 	lib->processor->queue_job(lib->processor, (job_t*)job);
 
 	return &this->public;
